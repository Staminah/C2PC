
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSleftTIMESleftDIVleftMINUSnonassocIFXnonassocELSESHORT CHAR DOUBLE FLOAT INT LONG VOID IF ELSE FOR WHILE RETURN COMMA SEMICOLON LPAREN RPAREN LBRACE RBRACE ASSIGN GREATER LESS EQ NOT_EQ GREATER_EQ LESS_EQ PLUS MINUS TIMES DIV MODULO CARET DOT EQ_PLUS EQ_MINUS EQ_TIMES EQ_DIV ID FNUMBER INUMBER STRING CHARACTER programme : statement  programme : statement programme  statement : iteration_statement\n        | compound_statement\n        | expression_statement\n        | selection_statement expression_statement : expression SEMICOLONcompound_statement : LBRACE programme RBRACE iteration_statement : WHILE LPAREN expression RPAREN statement iteration_statement : FOR LPAREN expression_statement expression_statement expression RPAREN statementselection_statement : IF LPAREN expression RPAREN statement %prec IFX selection_statement : IF LPAREN expression RPAREN statement ELSE statement assignation : ID ASSIGN expression  primary_expression : ID  primary_expression : INUMBER\n        | FNUMBER primary_expression : LPAREN expression RPAREN expression : primary_expression PLUS primary_expression\n    | primary_expression MINUS primary_expression\n    | primary_expression TIMES primary_expression\n    | primary_expression DIV primary_expression expression : equality_expression relational_expression : primary_expression\n    | assignation relational_expression : relational_expression LESS primary_expression\n                             | relational_expression GREATER primary_expression\n                             | relational_expression LESS_EQ primary_expression\n                             | relational_expression GREATER_EQ primary_expressionequality_expression : relational_expressionequality_expression : equality_expression EQ relational_expression\n                           | equality_expression NOT_EQ relational_expression'
    
_lr_action_items = {'WHILE':([0,2,3,4,5,6,11,23,41,56,58,59,61,62,63,64,65,],[7,7,-3,-4,-5,-6,7,-7,-8,7,7,-9,-11,7,7,-10,-12,]),'FOR':([0,2,3,4,5,6,11,23,41,56,58,59,61,62,63,64,65,],[10,10,-3,-4,-5,-6,10,-7,-8,10,10,-9,-11,10,10,-10,-12,]),'LBRACE':([0,2,3,4,5,6,11,23,41,56,58,59,61,62,63,64,65,],[11,11,-3,-4,-5,-6,11,-7,-8,11,11,-9,-11,11,11,-10,-12,]),'IF':([0,2,3,4,5,6,11,23,41,56,58,59,61,62,63,64,65,],[12,12,-3,-4,-5,-6,12,-7,-8,12,12,-9,-11,12,12,-10,-12,]),'ID':([0,2,3,4,5,6,8,11,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,40,41,56,57,58,59,61,62,63,64,65,],[15,15,-3,-4,-5,-6,15,15,15,-7,15,15,44,44,44,44,15,15,15,44,44,44,44,15,-8,15,15,15,-9,-11,15,15,-10,-12,]),'INUMBER':([0,2,3,4,5,6,8,11,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,40,41,56,57,58,59,61,62,63,64,65,],[16,16,-3,-4,-5,-6,16,16,16,-7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-8,16,16,16,-9,-11,16,16,-10,-12,]),'FNUMBER':([0,2,3,4,5,6,8,11,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,40,41,56,57,58,59,61,62,63,64,65,],[17,17,-3,-4,-5,-6,17,17,17,-7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-8,17,17,17,-9,-11,17,17,-10,-12,]),'LPAREN':([0,2,3,4,5,6,7,8,10,11,12,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,40,41,56,57,58,59,61,62,63,64,65,],[8,8,-3,-4,-5,-6,21,8,24,8,26,8,-7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-8,8,8,8,-9,-11,8,8,-10,-12,]),'$end':([1,2,3,4,5,6,20,23,41,59,61,64,65,],[0,-1,-3,-4,-5,-6,-2,-7,-8,-9,-11,-10,-12,]),'RBRACE':([2,3,4,5,6,20,23,25,41,59,61,64,65,],[-1,-3,-4,-5,-6,-2,-7,41,-8,-9,-11,-10,-12,]),'ELSE':([3,4,5,6,23,41,59,61,64,65,],[-3,-4,-5,-6,-7,-8,-9,63,-10,-12,]),'SEMICOLON':([9,13,14,15,16,17,18,19,39,43,44,45,46,47,48,49,50,51,52,53,54,55,],[23,-23,-22,-14,-15,-16,-29,-24,-17,-18,-14,-19,-20,-21,-30,-23,-31,-13,-25,-26,-27,-28,]),'PLUS':([13,15,16,17,39,],[27,-14,-15,-16,-17,]),'MINUS':([13,15,16,17,39,],[28,-14,-15,-16,-17,]),'TIMES':([13,15,16,17,39,],[29,-14,-15,-16,-17,]),'DIV':([13,15,16,17,39,],[30,-14,-15,-16,-17,]),'LESS':([13,14,15,16,17,18,19,39,43,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,-22,-14,-15,-16,34,-24,-17,-18,-14,-19,-20,-21,34,-23,34,-13,-25,-26,-27,-28,]),'GREATER':([13,14,15,16,17,18,19,39,43,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,-22,-14,-15,-16,35,-24,-17,-18,-14,-19,-20,-21,35,-23,35,-13,-25,-26,-27,-28,]),'LESS_EQ':([13,14,15,16,17,18,19,39,43,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,-22,-14,-15,-16,36,-24,-17,-18,-14,-19,-20,-21,36,-23,36,-13,-25,-26,-27,-28,]),'GREATER_EQ':([13,14,15,16,17,18,19,39,43,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,-22,-14,-15,-16,37,-24,-17,-18,-14,-19,-20,-21,37,-23,37,-13,-25,-26,-27,-28,]),'EQ':([13,14,15,16,17,18,19,39,43,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,31,-14,-15,-16,-29,-24,-17,-18,-14,-19,-20,-21,-30,-23,-31,-13,-25,-26,-27,-28,]),'NOT_EQ':([13,14,15,16,17,18,19,39,43,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,32,-14,-15,-16,-29,-24,-17,-18,-14,-19,-20,-21,-30,-23,-31,-13,-25,-26,-27,-28,]),'RPAREN':([13,14,15,16,17,18,19,22,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,],[-23,-22,-14,-15,-16,-29,-24,39,56,-17,58,-18,-14,-19,-20,-21,-30,-23,-31,-13,-25,-26,-27,-28,62,]),'ASSIGN':([15,],[33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,11,],[1,20,25,]),'statement':([0,2,11,56,58,62,63,],[2,2,2,59,61,64,65,]),'iteration_statement':([0,2,11,56,58,62,63,],[3,3,3,3,3,3,3,]),'compound_statement':([0,2,11,56,58,62,63,],[4,4,4,4,4,4,4,]),'expression_statement':([0,2,11,24,40,56,58,62,63,],[5,5,5,40,57,5,5,5,5,]),'selection_statement':([0,2,11,56,58,62,63,],[6,6,6,6,6,6,6,]),'expression':([0,2,8,11,21,24,26,33,40,56,57,58,62,63,],[9,9,22,9,38,9,42,51,9,9,60,9,9,9,]),'primary_expression':([0,2,8,11,21,24,26,27,28,29,30,31,32,33,34,35,36,37,40,56,57,58,62,63,],[13,13,13,13,13,13,13,43,45,46,47,49,49,13,52,53,54,55,13,13,13,13,13,13,]),'equality_expression':([0,2,8,11,21,24,26,33,40,56,57,58,62,63,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'relational_expression':([0,2,8,11,21,24,26,31,32,33,40,56,57,58,62,63,],[18,18,18,18,18,18,18,48,50,18,18,18,18,18,18,18,]),'assignation':([0,2,8,11,21,24,26,31,32,33,40,56,57,58,62,63,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser.py',19),
  ('programme -> statement programme','programme',2,'p_programme_recursive','parser.py',23),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',27),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',28),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',29),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',30),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',34),
  ('compound_statement -> LBRACE programme RBRACE','compound_statement',3,'p_compound_statement_01','parser.py',38),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_01','parser.py',43),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement_02','parser.py',47),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_01','parser.py',51),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_02','parser.py',55),
  ('assignation -> ID ASSIGN expression','assignation',3,'p_assign','parser.py',59),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression_var','parser.py',63),
  ('primary_expression -> INUMBER','primary_expression',1,'p_primary_expression_num','parser.py',67),
  ('primary_expression -> FNUMBER','primary_expression',1,'p_primary_expression_num','parser.py',68),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_par','parser.py',72),
  ('expression -> primary_expression PLUS primary_expression','expression',3,'p_expression_op','parser.py',82),
  ('expression -> primary_expression MINUS primary_expression','expression',3,'p_expression_op','parser.py',83),
  ('expression -> primary_expression TIMES primary_expression','expression',3,'p_expression_op','parser.py',84),
  ('expression -> primary_expression DIV primary_expression','expression',3,'p_expression_op','parser.py',85),
  ('expression -> equality_expression','expression',1,'p_expression_assign','parser.py',89),
  ('relational_expression -> primary_expression','relational_expression',1,'p_relational_expression_01','parser.py',93),
  ('relational_expression -> assignation','relational_expression',1,'p_relational_expression_01','parser.py',94),
  ('relational_expression -> relational_expression LESS primary_expression','relational_expression',3,'p_relational_expression_02','parser.py',98),
  ('relational_expression -> relational_expression GREATER primary_expression','relational_expression',3,'p_relational_expression_02','parser.py',99),
  ('relational_expression -> relational_expression LESS_EQ primary_expression','relational_expression',3,'p_relational_expression_02','parser.py',100),
  ('relational_expression -> relational_expression GREATER_EQ primary_expression','relational_expression',3,'p_relational_expression_02','parser.py',101),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_01','parser.py',105),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression_02','parser.py',109),
  ('equality_expression -> equality_expression NOT_EQ relational_expression','equality_expression',3,'p_equality_expression_02','parser.py',110),
]
