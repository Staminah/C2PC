
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '37EFB7F946B3AC548440FD072D4332CE'
    
_lr_action_items = {'WHILE':([0,2,3,4,5,6,7,8,13,15,16,40,44,71,73,76,77,94,96,103,105,110,111,113,114,],[9,9,-3,-4,-5,-6,-7,-8,9,-54,-55,-9,-44,-10,-45,-56,-57,9,9,-11,-13,9,9,-12,-14,]),'FOR':([0,2,3,4,5,6,7,8,13,15,16,40,44,71,73,76,77,94,96,103,105,110,111,113,114,],[12,12,-3,-4,-5,-6,-7,-8,12,-54,-55,-9,-44,-10,-45,-56,-57,12,12,-11,-13,12,12,-12,-14,]),'LBRACE':([0,2,3,4,5,6,7,8,13,15,16,40,44,48,49,50,71,73,76,77,94,96,98,103,105,106,110,111,113,114,],[13,13,-3,-4,-5,-6,-7,-8,13,-54,-55,-9,-44,13,-58,-59,-10,-45,-56,-57,13,13,-61,-11,-13,-60,13,13,-12,-14,]),'IF':([0,2,3,4,5,6,7,8,13,15,16,40,44,71,73,76,77,94,96,103,105,110,111,113,114,],[14,14,-3,-4,-5,-6,-7,-8,14,-54,-55,-9,-44,-10,-45,-56,-57,14,14,-11,-13,14,14,-12,-14,]),'RETURN':([0,2,3,4,5,6,7,8,13,15,16,40,44,71,73,76,77,94,96,103,105,110,111,113,114,],[17,17,-3,-4,-5,-6,-7,-8,17,-54,-55,-9,-44,-10,-45,-56,-57,17,17,-11,-13,17,17,-12,-14,]),'INT':([0,2,3,4,5,6,7,8,13,15,16,40,44,71,73,76,77,78,94,96,103,105,107,110,111,113,114,],[21,21,-3,-4,-5,-6,-7,-8,21,-54,-55,-9,-44,-10,-45,-56,-57,21,21,21,-11,-13,21,21,21,-12,-14,]),'CHAR':([0,2,3,4,5,6,7,8,13,15,16,40,44,71,73,76,77,78,94,96,103,105,107,110,111,113,114,],[22,22,-3,-4,-5,-6,-7,-8,22,-54,-55,-9,-44,-10,-45,-56,-57,22,22,22,-11,-13,22,22,22,-12,-14,]),'FLOAT':([0,2,3,4,5,6,7,8,13,15,16,40,44,71,73,76,77,78,94,96,103,105,107,110,111,113,114,],[23,23,-3,-4,-5,-6,-7,-8,23,-54,-55,-9,-44,-10,-45,-56,-57,23,23,23,-11,-13,23,23,23,-12,-14,]),'ID':([0,2,3,4,5,6,7,8,10,13,15,16,17,19,21,22,23,27,29,33,38,40,41,43,44,46,47,51,52,53,54,55,56,57,58,61,62,63,65,66,70,71,73,76,77,94,95,96,100,102,103,105,110,111,113,114,],[30,30,-3,-4,-5,-6,-7,-8,30,30,-54,-55,30,50,-51,-52,-53,60,60,60,30,-9,30,30,-44,30,30,30,30,60,60,60,60,60,60,60,60,60,30,30,30,-10,-45,-56,-57,30,30,30,50,30,-11,-13,30,30,-12,-14,]),'MINUS':([0,2,3,4,5,6,7,8,10,13,15,16,17,25,27,28,29,30,31,32,33,34,35,36,38,40,41,43,44,46,47,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,70,71,73,76,77,81,82,83,84,85,86,87,88,89,92,94,95,96,101,102,103,105,110,111,113,114,],[29,29,-3,-4,-5,-6,-7,-8,29,29,-54,-55,29,58,29,-31,29,-40,-36,-35,29,-46,-41,-42,29,-9,29,29,-44,29,29,29,29,29,29,29,29,29,29,-38,-40,-37,29,29,-39,-43,29,-10,-45,-56,-57,58,58,58,58,-29,-30,-32,-33,-34,-48,29,29,29,-47,29,-11,-13,29,29,-12,-14,]),'PLUS':([0,2,3,4,5,6,7,8,10,13,15,16,17,25,27,28,29,30,31,32,33,34,35,36,38,40,41,43,44,46,47,51,52,53,54,55,56,57,58,59,60,64,65,66,67,69,70,71,73,76,77,81,82,83,84,85,86,87,88,89,92,94,95,96,101,102,103,105,110,111,113,114,],[27,27,-3,-4,-5,-6,-7,-8,27,27,-54,-55,27,57,27,-31,27,-40,-36,-35,27,-46,-41,-42,27,-9,27,27,-44,27,27,27,27,27,27,27,27,27,27,-38,-40,-37,27,27,-39,-43,27,-10,-45,-56,-57,57,57,57,57,-29,-30,-32,-33,-34,-48,27,27,27,-47,27,-11,-13,27,27,-12,-14,]),'EXCLAMATION':([0,2,3,4,5,6,7,8,10,13,15,16,17,27,29,33,38,40,41,43,44,46,47,51,52,53,54,55,56,57,58,65,66,70,71,73,76,77,94,95,96,102,103,105,110,111,113,114,],[33,33,-3,-4,-5,-6,-7,-8,33,33,-54,-55,33,33,33,33,33,-9,33,33,-44,33,33,33,33,33,33,33,33,33,33,33,33,33,-10,-45,-56,-57,33,33,33,33,-11,-13,33,33,-12,-14,]),'INUMBER':([0,2,3,4,5,6,7,8,10,13,15,16,17,27,29,33,38,40,41,43,44,46,47,51,52,53,54,55,56,57,58,61,62,63,65,66,70,71,73,76,77,94,95,96,102,103,105,110,111,113,114,],[35,35,-3,-4,-5,-6,-7,-8,35,35,-54,-55,35,35,35,35,35,-9,35,35,-44,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-10,-45,-56,-57,35,35,35,35,-11,-13,35,35,-12,-14,]),'FNUMBER':([0,2,3,4,5,6,7,8,10,13,15,16,17,27,29,33,38,40,41,43,44,46,47,51,52,53,54,55,56,57,58,61,62,63,65,66,70,71,73,76,77,94,95,96,102,103,105,110,111,113,114,],[36,36,-3,-4,-5,-6,-7,-8,36,36,-54,-55,36,36,36,36,36,-9,36,36,-44,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-10,-45,-56,-57,36,36,36,36,-11,-13,36,36,-12,-14,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,27,29,30,31,33,34,35,36,38,40,41,43,44,46,47,49,50,51,52,53,54,55,56,57,58,60,61,62,63,65,66,69,70,71,73,76,77,87,88,89,92,94,95,96,98,101,102,103,105,106,110,111,113,114,],[10,10,-3,-4,-5,-6,-7,-8,38,10,41,10,43,-54,-55,10,10,10,-40,66,10,-46,-41,-42,10,-9,10,10,-44,10,10,78,-59,10,10,10,10,10,10,10,10,-40,10,10,10,10,10,-43,10,-10,-45,-56,-57,66,66,66,-48,10,10,10,-61,-47,10,-11,-13,-60,10,10,-12,-14,]),'$end':([1,2,3,4,5,6,7,8,15,16,37,40,44,71,73,76,77,103,105,113,114,],[0,-1,-3,-4,-5,-6,-7,-8,-54,-55,-2,-9,-44,-10,-45,-56,-57,-11,-13,-12,-14,]),'RBRACE':([2,3,4,5,6,7,8,15,16,37,40,42,44,71,73,76,77,103,105,113,114,],[-1,-3,-4,-5,-6,-7,-8,-54,-55,-2,-9,71,-44,-10,-45,-56,-57,-11,-13,-12,-14,]),'ELSE':([3,4,5,6,7,8,15,16,40,44,71,73,76,77,103,105,113,114,],[-3,-4,-5,-6,-7,-8,-54,-55,-9,-44,-10,-45,-56,-57,-11,111,-12,-14,]),'SEMICOLON':([11,17,18,20,24,25,26,28,30,31,32,34,35,36,45,48,49,50,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,98,101,106,],[40,44,-16,-17,-20,-23,-24,-31,-40,-36,-35,-46,-41,-42,73,77,-58,-59,-38,-40,-37,-39,-43,-18,-19,-21,-22,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-61,-47,-60,]),'RPAREN':([18,20,24,25,26,28,30,31,32,34,35,36,39,49,50,59,60,64,66,67,68,69,72,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,101,104,106,108,109,112,],[-16,-17,-20,-23,-24,-31,-40,-36,-35,-46,-41,-42,69,-58,-59,-38,-40,-37,92,-39,94,-43,96,-18,-19,98,-21,-22,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,101,-48,-49,106,-61,-62,-47,110,-60,-64,-50,-63,]),'LESS':([18,20,24,25,26,28,30,31,32,34,35,36,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,101,],[-16,-17,53,-23,-24,-31,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,-18,-19,53,53,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-47,]),'GREATER':([18,20,24,25,26,28,30,31,32,34,35,36,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,101,],[-16,-17,54,-23,-24,-31,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,-18,-19,54,54,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-47,]),'LESS_EQ':([18,20,24,25,26,28,30,31,32,34,35,36,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,101,],[-16,-17,55,-23,-24,-31,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,-18,-19,55,55,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-47,]),'GREATER_EQ':([18,20,24,25,26,28,30,31,32,34,35,36,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,101,],[-16,-17,56,-23,-24,-31,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,-18,-19,56,56,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-47,]),'EQ':([18,20,24,25,26,28,30,31,32,34,35,36,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,101,],[-16,51,-20,-23,-24,-31,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,51,51,-21,-22,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-47,]),'NOT_EQ':([18,20,24,25,26,28,30,31,32,34,35,36,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,101,],[-16,52,-20,-23,-24,-31,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,52,52,-21,-22,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-47,]),'DOUBLE_AMPERSAND':([18,20,24,25,26,28,30,31,32,34,35,36,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,101,],[46,-17,-20,-23,-24,-31,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,-18,-19,-21,-22,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-47,]),'DOUBLE_PIPE':([18,20,24,25,26,28,30,31,32,34,35,36,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,92,101,],[47,-17,-20,-23,-24,-31,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,-18,-19,-21,-22,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,-48,-47,]),'COMMA':([18,20,24,25,26,28,30,31,32,34,35,36,49,50,59,60,64,67,69,74,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,101,106,108,109,112,],[-16,-17,-20,-23,-24,-31,-40,-36,-35,-46,-41,-42,-58,-59,-38,-40,-37,-39,-43,-18,-19,-21,-22,-25,-26,-27,-28,-29,-30,-32,-33,-34,-15,102,-48,-49,107,-61,-62,-47,-60,-64,-50,-63,]),'TIMES':([28,30,31,32,34,35,36,59,60,64,67,69,85,86,87,88,89,92,101,],[61,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,61,61,-32,-33,-34,-48,-47,]),'DIV':([28,30,31,32,34,35,36,59,60,64,67,69,85,86,87,88,89,92,101,],[62,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,62,62,-32,-33,-34,-48,-47,]),'MODULO':([28,30,31,32,34,35,36,59,60,64,67,69,85,86,87,88,89,92,101,],[63,-40,-36,-35,-46,-41,-42,-38,-40,-37,-39,-43,63,63,-32,-33,-34,-48,-47,]),'ASSIGN':([30,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,13,],[1,37,42,]),'statement':([0,2,13,94,96,110,111,],[2,2,2,103,105,113,114,]),'iteration_statement':([0,2,13,94,96,110,111,],[3,3,3,3,3,3,3,]),'compound_statement':([0,2,13,48,94,96,110,111,],[4,4,4,76,4,4,4,4,]),'expression_statement':([0,2,13,41,70,94,96,110,111,],[5,5,5,70,95,5,5,5,5,]),'selection_statement':([0,2,13,94,96,110,111,],[6,6,6,6,6,6,6,]),'external_declaration':([0,2,13,94,96,110,111,],[7,7,7,7,7,7,7,]),'return_statement':([0,2,13,94,96,110,111,],[8,8,8,8,8,8,8,]),'expression':([0,2,10,13,17,38,41,43,65,66,70,94,95,96,102,110,111,],[11,11,39,11,45,68,11,72,90,93,11,11,104,11,109,11,11,]),'function_definition':([0,2,13,94,96,110,111,],[15,15,15,15,15,15,15,]),'declaration':([0,2,13,94,96,110,111,],[16,16,16,16,16,16,16,]),'logical_expression':([0,2,10,13,17,38,41,43,65,66,70,94,95,96,102,110,111,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'type_specifier':([0,2,13,78,94,96,107,110,111,],[19,19,19,100,19,19,100,19,19,]),'equality_expression':([0,2,10,13,17,38,41,43,46,47,65,66,70,94,95,96,102,110,111,],[20,20,20,20,20,20,20,20,74,75,20,20,20,20,20,20,20,20,20,]),'relational_expression':([0,2,10,13,17,38,41,43,46,47,51,52,65,66,70,94,95,96,102,110,111,],[24,24,24,24,24,24,24,24,24,24,79,80,24,24,24,24,24,24,24,24,24,]),'additive_expression':([0,2,10,13,17,38,41,43,46,47,51,52,53,54,55,56,65,66,70,94,95,96,102,110,111,],[25,25,25,25,25,25,25,25,25,25,25,25,81,82,83,84,25,25,25,25,25,25,25,25,25,]),'assignation':([0,2,10,13,17,38,41,43,46,47,51,52,65,66,70,94,95,96,102,110,111,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'mult_expression':([0,2,10,13,17,38,41,43,46,47,51,52,53,54,55,56,57,58,65,66,70,94,95,96,102,110,111,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,85,86,28,28,28,28,28,28,28,28,28,]),'postfix_expression':([0,2,10,13,17,27,29,33,38,41,43,46,47,51,52,53,54,55,56,57,58,61,62,63,65,66,70,94,95,96,102,110,111,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,87,88,89,31,31,31,31,31,31,31,31,31,]),'unary_expression':([0,2,10,13,17,27,29,33,38,41,43,46,47,51,52,53,54,55,56,57,58,65,66,70,94,95,96,102,110,111,],[32,32,32,32,32,59,64,67,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'primary_expression':([0,2,10,13,17,27,29,33,38,41,43,46,47,51,52,53,54,55,56,57,58,61,62,63,65,66,70,94,95,96,102,110,111,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'declarator':([19,100,],[48,108,]),'direct_declarator':([19,100,],[49,49,]),'argument_expression_list':([66,],[91,]),'parameter_list':([78,],[97,]),'parameter_declaration':([78,107,],[99,112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser_C2PC.py',24),
  ('programme -> statement programme','programme',2,'p_programme_recursive','parser_C2PC.py',28),
  ('statement -> iteration_statement','statement',1,'p_statement','parser_C2PC.py',32),
  ('statement -> compound_statement','statement',1,'p_statement','parser_C2PC.py',33),
  ('statement -> expression_statement','statement',1,'p_statement','parser_C2PC.py',34),
  ('statement -> selection_statement','statement',1,'p_statement','parser_C2PC.py',35),
  ('statement -> external_declaration','statement',1,'p_statement','parser_C2PC.py',36),
  ('statement -> return_statement','statement',1,'p_statement','parser_C2PC.py',37),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser_C2PC.py',41),
  ('compound_statement -> LBRACE programme RBRACE','compound_statement',3,'p_compound_statement_01','parser_C2PC.py',45),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_01','parser_C2PC.py',49),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement_02','parser_C2PC.py',53),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_01','parser_C2PC.py',57),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_02','parser_C2PC.py',61),
  ('assignation -> ID ASSIGN expression','assignation',3,'p_assign','parser_C2PC.py',65),
  ('expression -> logical_expression','expression',1,'p_expression_assign','parser_C2PC.py',73),
  ('logical_expression -> equality_expression','logical_expression',1,'p_logical_expression_01','parser_C2PC.py',77),
  ('logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression','logical_expression',3,'p_logical_expression_02','parser_C2PC.py',81),
  ('logical_expression -> logical_expression DOUBLE_PIPE equality_expression','logical_expression',3,'p_logical_expression_02','parser_C2PC.py',82),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_01','parser_C2PC.py',86),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression_02','parser_C2PC.py',90),
  ('equality_expression -> equality_expression NOT_EQ relational_expression','equality_expression',3,'p_equality_expression_02','parser_C2PC.py',91),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression_01','parser_C2PC.py',95),
  ('relational_expression -> assignation','relational_expression',1,'p_relational_expression_01','parser_C2PC.py',96),
  ('relational_expression -> relational_expression LESS additive_expression','relational_expression',3,'p_relational_expression_02','parser_C2PC.py',100),
  ('relational_expression -> relational_expression GREATER additive_expression','relational_expression',3,'p_relational_expression_02','parser_C2PC.py',101),
  ('relational_expression -> relational_expression LESS_EQ additive_expression','relational_expression',3,'p_relational_expression_02','parser_C2PC.py',102),
  ('relational_expression -> relational_expression GREATER_EQ additive_expression','relational_expression',3,'p_relational_expression_02','parser_C2PC.py',103),
  ('additive_expression -> additive_expression PLUS mult_expression','additive_expression',3,'p_additive_expression_01','parser_C2PC.py',107),
  ('additive_expression -> additive_expression MINUS mult_expression','additive_expression',3,'p_additive_expression_01','parser_C2PC.py',108),
  ('additive_expression -> mult_expression','additive_expression',1,'p_additive_expression_02','parser_C2PC.py',112),
  ('mult_expression -> mult_expression TIMES postfix_expression','mult_expression',3,'p_mult_expression_01','parser_C2PC.py',116),
  ('mult_expression -> mult_expression DIV postfix_expression','mult_expression',3,'p_mult_expression_01','parser_C2PC.py',117),
  ('mult_expression -> mult_expression MODULO postfix_expression','mult_expression',3,'p_mult_expression_01','parser_C2PC.py',118),
  ('mult_expression -> unary_expression','mult_expression',1,'p_mult_expression_02','parser_C2PC.py',122),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_01','parser_C2PC.py',126),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression_02','parser_C2PC.py',130),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression_03','parser_C2PC.py',134),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression_04','parser_C2PC.py',138),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression_var','parser_C2PC.py',143),
  ('primary_expression -> INUMBER','primary_expression',1,'p_primary_expression_num','parser_C2PC.py',147),
  ('primary_expression -> FNUMBER','primary_expression',1,'p_primary_expression_num','parser_C2PC.py',148),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_par','parser_C2PC.py',152),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_01','parser_C2PC.py',156),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_02','parser_C2PC.py',160),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_01','parser_C2PC.py',166),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_02','parser_C2PC.py',170),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_03','parser_C2PC.py',181),
  ('argument_expression_list -> expression','argument_expression_list',1,'p_argument_expression_list_01','parser_C2PC.py',194),
  ('argument_expression_list -> argument_expression_list COMMA expression','argument_expression_list',3,'p_argument_expression_list_02','parser_C2PC.py',198),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser_C2PC.py',205),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser_C2PC.py',206),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser_C2PC.py',207),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser_C2PC.py',211),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser_C2PC.py',212),
  ('function_definition -> type_specifier declarator compound_statement','function_definition',3,'p_function_definition_01','parser_C2PC.py',216),
  ('declaration -> type_specifier declarator SEMICOLON','declaration',3,'p_declaration_01','parser_C2PC.py',233),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_01','parser_C2PC.py',244),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator_01','parser_C2PC.py',248),
  ('direct_declarator -> direct_declarator LPAREN parameter_list RPAREN','direct_declarator',4,'p_direct_declarator_02','parser_C2PC.py',252),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator_03','parser_C2PC.py',258),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_01','parser_C2PC.py',263),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_02','parser_C2PC.py',267),
  ('parameter_declaration -> type_specifier declarator','parameter_declaration',2,'p_parameter_declaration','parser_C2PC.py',272),
]
