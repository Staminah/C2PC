
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSleftMINUSleftTIMESleftDIVnonassocIFXnonassocELSESHORT CHAR DOUBLE FLOAT INT LONG VOID IF ELSE FOR WHILE RETURN COMMA SEMICOLON LPAREN RPAREN LBRACE RBRACE ASSIGN GREATER LESS EQ NOT_EQ GREATER_EQ LESS_EQ PLUS MINUS TIMES DIV MODULO CARET DOT EQ_PLUS EQ_MINUS EQ_TIMES EQ_DIV ID FNUMBER INUMBER STRING CHARACTER programme : statement  programme : statement programme  statement : iteration_statement\n        | compound_statement\n        | expression_statement\n        | selection_statement expression_statement : expression SEMICOLONcompound_statement : LBRACE programme RBRACE iteration_statement : WHILE LPAREN expression RPAREN statement iteration_statement : FOR LPAREN expression_statement expression_statement expression RPAREN statementselection_statement : IF LPAREN expression RPAREN statement %prec IFX selection_statement : IF LPAREN expression RPAREN statement ELSE statement assignation : ID ASSIGN expression  primary_expression : ID  primary_expression : INUMBER\n        | FNUMBER primary_expression : LPAREN expression RPAREN op_expression : op_expression PLUS primary_expression\n    | op_expression MINUS primary_expression\n    | op_expression TIMES primary_expression\n    | op_expression DIV primary_expression op_expression : primary_expression expression : equality_expression relational_expression : op_expression\n    | assignation relational_expression : relational_expression LESS op_expression\n                             | relational_expression GREATER op_expression\n                             | relational_expression LESS_EQ op_expression\n                             | relational_expression GREATER_EQ op_expressionequality_expression : relational_expressionequality_expression : equality_expression EQ relational_expression\n                           | equality_expression NOT_EQ relational_expression'
    
_lr_action_items = {'WHILE':([0,2,3,4,5,6,11,24,42,56,58,59,61,62,63,64,65,],[7,7,-3,-4,-5,-6,7,-7,-8,7,7,-9,-11,7,7,-10,-12,]),'FOR':([0,2,3,4,5,6,11,24,42,56,58,59,61,62,63,64,65,],[10,10,-3,-4,-5,-6,10,-7,-8,10,10,-9,-11,10,10,-10,-12,]),'LBRACE':([0,2,3,4,5,6,11,24,42,56,58,59,61,62,63,64,65,],[11,11,-3,-4,-5,-6,11,-7,-8,11,11,-9,-11,11,11,-10,-12,]),'IF':([0,2,3,4,5,6,11,24,42,56,58,59,61,62,63,64,65,],[12,12,-3,-4,-5,-6,12,-7,-8,12,12,-9,-11,12,12,-10,-12,]),'ID':([0,2,3,4,5,6,8,11,22,24,25,27,28,29,30,31,32,33,34,35,36,37,38,41,42,56,57,58,59,61,62,63,64,65,],[18,18,-3,-4,-5,-6,18,18,18,-7,18,18,18,18,47,47,47,47,47,47,47,47,18,18,-8,18,18,18,-9,-11,18,18,-10,-12,]),'INUMBER':([0,2,3,4,5,6,8,11,22,24,25,27,28,29,30,31,32,33,34,35,36,37,38,41,42,56,57,58,59,61,62,63,64,65,],[19,19,-3,-4,-5,-6,19,19,19,-7,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-8,19,19,19,-9,-11,19,19,-10,-12,]),'FNUMBER':([0,2,3,4,5,6,8,11,22,24,25,27,28,29,30,31,32,33,34,35,36,37,38,41,42,56,57,58,59,61,62,63,64,65,],[20,20,-3,-4,-5,-6,20,20,20,-7,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-8,20,20,20,-9,-11,20,20,-10,-12,]),'LPAREN':([0,2,3,4,5,6,7,8,10,11,12,22,24,25,27,28,29,30,31,32,33,34,35,36,37,38,41,42,56,57,58,59,61,62,63,64,65,],[8,8,-3,-4,-5,-6,22,8,25,8,27,8,-7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-8,8,8,8,-9,-11,8,8,-10,-12,]),'$end':([1,2,3,4,5,6,21,24,42,59,61,64,65,],[0,-1,-3,-4,-5,-6,-2,-7,-8,-9,-11,-10,-12,]),'RBRACE':([2,3,4,5,6,21,24,26,42,59,61,64,65,],[-1,-3,-4,-5,-6,-2,-7,42,-8,-9,-11,-10,-12,]),'ELSE':([3,4,5,6,24,42,59,61,64,65,],[-3,-4,-5,-6,-7,-8,-9,63,-10,-12,]),'SEMICOLON':([9,13,14,15,16,17,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,],[24,-23,-30,-24,-25,-22,-14,-15,-16,-17,-31,-32,-26,-14,-27,-28,-29,-18,-19,-20,-21,-13,]),'RPAREN':([13,14,15,16,17,18,19,20,23,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,60,],[-23,-30,-24,-25,-22,-14,-15,-16,40,56,-17,58,-31,-32,-26,-14,-27,-28,-29,-18,-19,-20,-21,-13,62,]),'LESS':([13,14,15,16,17,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,30,-24,-25,-22,-14,-15,-16,-17,30,30,-26,-14,-27,-28,-29,-18,-19,-20,-21,-13,]),'GREATER':([13,14,15,16,17,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,31,-24,-25,-22,-14,-15,-16,-17,31,31,-26,-14,-27,-28,-29,-18,-19,-20,-21,-13,]),'LESS_EQ':([13,14,15,16,17,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,32,-24,-25,-22,-14,-15,-16,-17,32,32,-26,-14,-27,-28,-29,-18,-19,-20,-21,-13,]),'GREATER_EQ':([13,14,15,16,17,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,],[-23,33,-24,-25,-22,-14,-15,-16,-17,33,33,-26,-14,-27,-28,-29,-18,-19,-20,-21,-13,]),'EQ':([13,14,15,16,17,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,],[28,-30,-24,-25,-22,-14,-15,-16,-17,-31,-32,-26,-14,-27,-28,-29,-18,-19,-20,-21,-13,]),'NOT_EQ':([13,14,15,16,17,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,],[29,-30,-24,-25,-22,-14,-15,-16,-17,-31,-32,-26,-14,-27,-28,-29,-18,-19,-20,-21,-13,]),'PLUS':([15,17,18,19,20,40,46,47,48,49,50,51,52,53,54,],[34,-22,-14,-15,-16,-17,34,-14,34,34,34,-18,-19,-20,-21,]),'MINUS':([15,17,18,19,20,40,46,47,48,49,50,51,52,53,54,],[35,-22,-14,-15,-16,-17,35,-14,35,35,35,-18,-19,-20,-21,]),'TIMES':([15,17,18,19,20,40,46,47,48,49,50,51,52,53,54,],[36,-22,-14,-15,-16,-17,36,-14,36,36,36,-18,-19,-20,-21,]),'DIV':([15,17,18,19,20,40,46,47,48,49,50,51,52,53,54,],[37,-22,-14,-15,-16,-17,37,-14,37,37,37,-18,-19,-20,-21,]),'ASSIGN':([18,],[38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,11,],[1,21,26,]),'statement':([0,2,11,56,58,62,63,],[2,2,2,59,61,64,65,]),'iteration_statement':([0,2,11,56,58,62,63,],[3,3,3,3,3,3,3,]),'compound_statement':([0,2,11,56,58,62,63,],[4,4,4,4,4,4,4,]),'expression_statement':([0,2,11,25,41,56,58,62,63,],[5,5,5,41,57,5,5,5,5,]),'selection_statement':([0,2,11,56,58,62,63,],[6,6,6,6,6,6,6,]),'expression':([0,2,8,11,22,25,27,38,41,56,57,58,62,63,],[9,9,23,9,39,9,43,55,9,9,60,9,9,9,]),'equality_expression':([0,2,8,11,22,25,27,38,41,56,57,58,62,63,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'relational_expression':([0,2,8,11,22,25,27,28,29,38,41,56,57,58,62,63,],[14,14,14,14,14,14,14,44,45,14,14,14,14,14,14,14,]),'op_expression':([0,2,8,11,22,25,27,28,29,30,31,32,33,38,41,56,57,58,62,63,],[15,15,15,15,15,15,15,15,15,46,48,49,50,15,15,15,15,15,15,15,]),'assignation':([0,2,8,11,22,25,27,28,29,38,41,56,57,58,62,63,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'primary_expression':([0,2,8,11,22,25,27,28,29,30,31,32,33,34,35,36,37,38,41,56,57,58,62,63,],[17,17,17,17,17,17,17,17,17,17,17,17,17,51,52,53,54,17,17,17,17,17,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser.py',19),
  ('programme -> statement programme','programme',2,'p_programme_recursive','parser.py',23),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',27),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',28),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',29),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',30),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',34),
  ('compound_statement -> LBRACE programme RBRACE','compound_statement',3,'p_compound_statement_01','parser.py',38),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_01','parser.py',43),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement_02','parser.py',47),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_01','parser.py',51),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_02','parser.py',55),
  ('assignation -> ID ASSIGN expression','assignation',3,'p_assign','parser.py',59),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression_var','parser.py',63),
  ('primary_expression -> INUMBER','primary_expression',1,'p_primary_expression_num','parser.py',67),
  ('primary_expression -> FNUMBER','primary_expression',1,'p_primary_expression_num','parser.py',68),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_par','parser.py',72),
  ('op_expression -> op_expression PLUS primary_expression','op_expression',3,'p_expression_op_01','parser.py',82),
  ('op_expression -> op_expression MINUS primary_expression','op_expression',3,'p_expression_op_01','parser.py',83),
  ('op_expression -> op_expression TIMES primary_expression','op_expression',3,'p_expression_op_01','parser.py',84),
  ('op_expression -> op_expression DIV primary_expression','op_expression',3,'p_expression_op_01','parser.py',85),
  ('op_expression -> primary_expression','op_expression',1,'p_expression_op_02','parser.py',89),
  ('expression -> equality_expression','expression',1,'p_expression_assign','parser.py',93),
  ('relational_expression -> op_expression','relational_expression',1,'p_relational_expression_01','parser.py',97),
  ('relational_expression -> assignation','relational_expression',1,'p_relational_expression_01','parser.py',98),
  ('relational_expression -> relational_expression LESS op_expression','relational_expression',3,'p_relational_expression_02','parser.py',102),
  ('relational_expression -> relational_expression GREATER op_expression','relational_expression',3,'p_relational_expression_02','parser.py',103),
  ('relational_expression -> relational_expression LESS_EQ op_expression','relational_expression',3,'p_relational_expression_02','parser.py',104),
  ('relational_expression -> relational_expression GREATER_EQ op_expression','relational_expression',3,'p_relational_expression_02','parser.py',105),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_01','parser.py',109),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression_02','parser.py',113),
  ('equality_expression -> equality_expression NOT_EQ relational_expression','equality_expression',3,'p_equality_expression_02','parser.py',114),
]
