Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    SHORT
    CHAR
    DOUBLE
    FLOAT
    INT
    LONG
    VOID
    RETURN
    COMMA
    MODULO
    CARET
    DOT
    EQ_PLUS
    EQ_MINUS
    EQ_TIMES
    EQ_DIV
    STRING
    CHARACTER

Grammar

Rule 0     S' -> programme
Rule 1     programme -> statement
Rule 2     programme -> statement programme
Rule 3     statement -> iteration_statement
Rule 4     statement -> compound_statement
Rule 5     statement -> expression_statement
Rule 6     statement -> selection_statement
Rule 7     expression_statement -> expression SEMICOLON
Rule 8     compound_statement -> LBRACE programme RBRACE
Rule 9     iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 10    iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
Rule 11    selection_statement -> IF LPAREN expression RPAREN statement
Rule 12    selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 13    assignation -> ID ASSIGN expression
Rule 14    primary_expression -> ID
Rule 15    primary_expression -> INUMBER
Rule 16    primary_expression -> FNUMBER
Rule 17    primary_expression -> LPAREN expression RPAREN
Rule 18    expression -> primary_expression PLUS primary_expression
Rule 19    expression -> primary_expression MINUS primary_expression
Rule 20    expression -> primary_expression TIMES primary_expression
Rule 21    expression -> primary_expression DIV primary_expression
Rule 22    expression -> equality_expression
Rule 23    relational_expression -> primary_expression
Rule 24    relational_expression -> assignation
Rule 25    relational_expression -> relational_expression LESS primary_expression
Rule 26    relational_expression -> relational_expression GREATER primary_expression
Rule 27    relational_expression -> relational_expression LESS_EQ primary_expression
Rule 28    relational_expression -> relational_expression GREATER_EQ primary_expression
Rule 29    equality_expression -> relational_expression
Rule 30    equality_expression -> equality_expression EQ relational_expression
Rule 31    equality_expression -> equality_expression NOT_EQ relational_expression

Terminals, with rules where they appear

ASSIGN               : 13
CARET                : 
CHAR                 : 
CHARACTER            : 
COMMA                : 
DIV                  : 21
DOT                  : 
DOUBLE               : 
ELSE                 : 12
EQ                   : 30
EQ_DIV               : 
EQ_MINUS             : 
EQ_PLUS              : 
EQ_TIMES             : 
FLOAT                : 
FNUMBER              : 16
FOR                  : 10
GREATER              : 26
GREATER_EQ           : 28
ID                   : 13 14
IF                   : 11 12
INT                  : 
INUMBER              : 15
LBRACE               : 8
LESS                 : 25
LESS_EQ              : 27
LONG                 : 
LPAREN               : 9 10 11 12 17
MINUS                : 19
MODULO               : 
NOT_EQ               : 31
PLUS                 : 18
RBRACE               : 8
RETURN               : 
RPAREN               : 9 10 11 12 17
SEMICOLON            : 7
SHORT                : 
STRING               : 
TIMES                : 20
VOID                 : 
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

assignation          : 24
compound_statement   : 4
equality_expression  : 22 30 31
expression           : 7 9 10 11 12 13 17
expression_statement : 5 10 10
iteration_statement  : 3
primary_expression   : 18 18 19 19 20 20 21 21 23 25 26 27 28
programme            : 2 8 0
relational_expression : 25 26 27 28 29 30 31
selection_statement  : 6
statement            : 1 2 9 10 11 12 12

Parsing method: LALR

state 0

    (0) S' -> . programme
    (1) programme -> . statement
    (2) programme -> . statement programme
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    programme                      shift and go to state 1
    statement                      shift and go to state 2
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    expression                     shift and go to state 9
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 1

    (0) S' -> programme .



state 2

    (1) programme -> statement .
    (2) programme -> statement . programme
    (1) programme -> . statement
    (2) programme -> . statement programme
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    $end            reduce using rule 1 (programme -> statement .)
    RBRACE          reduce using rule 1 (programme -> statement .)
    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    statement                      shift and go to state 2
    programme                      shift and go to state 20
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    expression                     shift and go to state 9
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 3

    (3) statement -> iteration_statement .

    WHILE           reduce using rule 3 (statement -> iteration_statement .)
    FOR             reduce using rule 3 (statement -> iteration_statement .)
    LBRACE          reduce using rule 3 (statement -> iteration_statement .)
    IF              reduce using rule 3 (statement -> iteration_statement .)
    ID              reduce using rule 3 (statement -> iteration_statement .)
    INUMBER         reduce using rule 3 (statement -> iteration_statement .)
    FNUMBER         reduce using rule 3 (statement -> iteration_statement .)
    LPAREN          reduce using rule 3 (statement -> iteration_statement .)
    $end            reduce using rule 3 (statement -> iteration_statement .)
    RBRACE          reduce using rule 3 (statement -> iteration_statement .)
    ELSE            reduce using rule 3 (statement -> iteration_statement .)


state 4

    (4) statement -> compound_statement .

    WHILE           reduce using rule 4 (statement -> compound_statement .)
    FOR             reduce using rule 4 (statement -> compound_statement .)
    LBRACE          reduce using rule 4 (statement -> compound_statement .)
    IF              reduce using rule 4 (statement -> compound_statement .)
    ID              reduce using rule 4 (statement -> compound_statement .)
    INUMBER         reduce using rule 4 (statement -> compound_statement .)
    FNUMBER         reduce using rule 4 (statement -> compound_statement .)
    LPAREN          reduce using rule 4 (statement -> compound_statement .)
    $end            reduce using rule 4 (statement -> compound_statement .)
    RBRACE          reduce using rule 4 (statement -> compound_statement .)
    ELSE            reduce using rule 4 (statement -> compound_statement .)


state 5

    (5) statement -> expression_statement .

    WHILE           reduce using rule 5 (statement -> expression_statement .)
    FOR             reduce using rule 5 (statement -> expression_statement .)
    LBRACE          reduce using rule 5 (statement -> expression_statement .)
    IF              reduce using rule 5 (statement -> expression_statement .)
    ID              reduce using rule 5 (statement -> expression_statement .)
    INUMBER         reduce using rule 5 (statement -> expression_statement .)
    FNUMBER         reduce using rule 5 (statement -> expression_statement .)
    LPAREN          reduce using rule 5 (statement -> expression_statement .)
    $end            reduce using rule 5 (statement -> expression_statement .)
    RBRACE          reduce using rule 5 (statement -> expression_statement .)
    ELSE            reduce using rule 5 (statement -> expression_statement .)


state 6

    (6) statement -> selection_statement .

    WHILE           reduce using rule 6 (statement -> selection_statement .)
    FOR             reduce using rule 6 (statement -> selection_statement .)
    LBRACE          reduce using rule 6 (statement -> selection_statement .)
    IF              reduce using rule 6 (statement -> selection_statement .)
    ID              reduce using rule 6 (statement -> selection_statement .)
    INUMBER         reduce using rule 6 (statement -> selection_statement .)
    FNUMBER         reduce using rule 6 (statement -> selection_statement .)
    LPAREN          reduce using rule 6 (statement -> selection_statement .)
    $end            reduce using rule 6 (statement -> selection_statement .)
    RBRACE          reduce using rule 6 (statement -> selection_statement .)
    ELSE            reduce using rule 6 (statement -> selection_statement .)


state 7

    (9) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 21


state 8

    (17) primary_expression -> LPAREN . expression RPAREN
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 22
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 9

    (7) expression_statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 23


state 10

    (10) iteration_statement -> FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN          shift and go to state 24


state 11

    (8) compound_statement -> LBRACE . programme RBRACE
    (1) programme -> . statement
    (2) programme -> . statement programme
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    programme                      shift and go to state 25
    statement                      shift and go to state 2
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    expression                     shift and go to state 9
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 12

    (11) selection_statement -> IF . LPAREN expression RPAREN statement
    (12) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 26


state 13

    (18) expression -> primary_expression . PLUS primary_expression
    (19) expression -> primary_expression . MINUS primary_expression
    (20) expression -> primary_expression . TIMES primary_expression
    (21) expression -> primary_expression . DIV primary_expression
    (23) relational_expression -> primary_expression .

    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIV             shift and go to state 30
    LESS            reduce using rule 23 (relational_expression -> primary_expression .)
    GREATER         reduce using rule 23 (relational_expression -> primary_expression .)
    LESS_EQ         reduce using rule 23 (relational_expression -> primary_expression .)
    GREATER_EQ      reduce using rule 23 (relational_expression -> primary_expression .)
    EQ              reduce using rule 23 (relational_expression -> primary_expression .)
    NOT_EQ          reduce using rule 23 (relational_expression -> primary_expression .)
    SEMICOLON       reduce using rule 23 (relational_expression -> primary_expression .)
    RPAREN          reduce using rule 23 (relational_expression -> primary_expression .)


state 14

    (22) expression -> equality_expression .
    (30) equality_expression -> equality_expression . EQ relational_expression
    (31) equality_expression -> equality_expression . NOT_EQ relational_expression

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
    SEMICOLON       reduce using rule 22 (expression -> equality_expression .)
    RPAREN          reduce using rule 22 (expression -> equality_expression .)
    LESS            reduce using rule 22 (expression -> equality_expression .)
    GREATER         reduce using rule 22 (expression -> equality_expression .)
    LESS_EQ         reduce using rule 22 (expression -> equality_expression .)
    GREATER_EQ      reduce using rule 22 (expression -> equality_expression .)
    EQ              shift and go to state 31
    NOT_EQ          shift and go to state 32

  ! EQ              [ reduce using rule 22 (expression -> equality_expression .) ]
  ! NOT_EQ          [ reduce using rule 22 (expression -> equality_expression .) ]


state 15

    (14) primary_expression -> ID .
    (13) assignation -> ID . ASSIGN expression

    PLUS            reduce using rule 14 (primary_expression -> ID .)
    MINUS           reduce using rule 14 (primary_expression -> ID .)
    TIMES           reduce using rule 14 (primary_expression -> ID .)
    DIV             reduce using rule 14 (primary_expression -> ID .)
    LESS            reduce using rule 14 (primary_expression -> ID .)
    GREATER         reduce using rule 14 (primary_expression -> ID .)
    LESS_EQ         reduce using rule 14 (primary_expression -> ID .)
    GREATER_EQ      reduce using rule 14 (primary_expression -> ID .)
    EQ              reduce using rule 14 (primary_expression -> ID .)
    NOT_EQ          reduce using rule 14 (primary_expression -> ID .)
    SEMICOLON       reduce using rule 14 (primary_expression -> ID .)
    RPAREN          reduce using rule 14 (primary_expression -> ID .)
    ASSIGN          shift and go to state 33


state 16

    (15) primary_expression -> INUMBER .

    PLUS            reduce using rule 15 (primary_expression -> INUMBER .)
    MINUS           reduce using rule 15 (primary_expression -> INUMBER .)
    TIMES           reduce using rule 15 (primary_expression -> INUMBER .)
    DIV             reduce using rule 15 (primary_expression -> INUMBER .)
    LESS            reduce using rule 15 (primary_expression -> INUMBER .)
    GREATER         reduce using rule 15 (primary_expression -> INUMBER .)
    LESS_EQ         reduce using rule 15 (primary_expression -> INUMBER .)
    GREATER_EQ      reduce using rule 15 (primary_expression -> INUMBER .)
    EQ              reduce using rule 15 (primary_expression -> INUMBER .)
    NOT_EQ          reduce using rule 15 (primary_expression -> INUMBER .)
    SEMICOLON       reduce using rule 15 (primary_expression -> INUMBER .)
    RPAREN          reduce using rule 15 (primary_expression -> INUMBER .)


state 17

    (16) primary_expression -> FNUMBER .

    PLUS            reduce using rule 16 (primary_expression -> FNUMBER .)
    MINUS           reduce using rule 16 (primary_expression -> FNUMBER .)
    TIMES           reduce using rule 16 (primary_expression -> FNUMBER .)
    DIV             reduce using rule 16 (primary_expression -> FNUMBER .)
    LESS            reduce using rule 16 (primary_expression -> FNUMBER .)
    GREATER         reduce using rule 16 (primary_expression -> FNUMBER .)
    LESS_EQ         reduce using rule 16 (primary_expression -> FNUMBER .)
    GREATER_EQ      reduce using rule 16 (primary_expression -> FNUMBER .)
    EQ              reduce using rule 16 (primary_expression -> FNUMBER .)
    NOT_EQ          reduce using rule 16 (primary_expression -> FNUMBER .)
    SEMICOLON       reduce using rule 16 (primary_expression -> FNUMBER .)
    RPAREN          reduce using rule 16 (primary_expression -> FNUMBER .)


state 18

    (29) equality_expression -> relational_expression .
    (25) relational_expression -> relational_expression . LESS primary_expression
    (26) relational_expression -> relational_expression . GREATER primary_expression
    (27) relational_expression -> relational_expression . LESS_EQ primary_expression
    (28) relational_expression -> relational_expression . GREATER_EQ primary_expression

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQ resolved as shift
  ! shift/reduce conflict for GREATER_EQ resolved as shift
    EQ              reduce using rule 29 (equality_expression -> relational_expression .)
    NOT_EQ          reduce using rule 29 (equality_expression -> relational_expression .)
    SEMICOLON       reduce using rule 29 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 29 (equality_expression -> relational_expression .)
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER_EQ      shift and go to state 37

  ! LESS            [ reduce using rule 29 (equality_expression -> relational_expression .) ]
  ! GREATER         [ reduce using rule 29 (equality_expression -> relational_expression .) ]
  ! LESS_EQ         [ reduce using rule 29 (equality_expression -> relational_expression .) ]
  ! GREATER_EQ      [ reduce using rule 29 (equality_expression -> relational_expression .) ]


state 19

    (24) relational_expression -> assignation .

    LESS            reduce using rule 24 (relational_expression -> assignation .)
    GREATER         reduce using rule 24 (relational_expression -> assignation .)
    LESS_EQ         reduce using rule 24 (relational_expression -> assignation .)
    GREATER_EQ      reduce using rule 24 (relational_expression -> assignation .)
    EQ              reduce using rule 24 (relational_expression -> assignation .)
    NOT_EQ          reduce using rule 24 (relational_expression -> assignation .)
    SEMICOLON       reduce using rule 24 (relational_expression -> assignation .)
    RPAREN          reduce using rule 24 (relational_expression -> assignation .)


state 20

    (2) programme -> statement programme .

    $end            reduce using rule 2 (programme -> statement programme .)
    RBRACE          reduce using rule 2 (programme -> statement programme .)


state 21

    (9) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 38
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 22

    (17) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 39


state 23

    (7) expression_statement -> expression SEMICOLON .

    WHILE           reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    FOR             reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    ID              reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    INUMBER         reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    FNUMBER         reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    ELSE            reduce using rule 7 (expression_statement -> expression SEMICOLON .)


state 24

    (10) iteration_statement -> FOR LPAREN . expression_statement expression_statement expression RPAREN statement
    (7) expression_statement -> . expression SEMICOLON
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression_statement           shift and go to state 40
    expression                     shift and go to state 9
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 25

    (8) compound_statement -> LBRACE programme . RBRACE

    RBRACE          shift and go to state 41


state 26

    (11) selection_statement -> IF LPAREN . expression RPAREN statement
    (12) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 42
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 27

    (18) expression -> primary_expression PLUS . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 43

state 28

    (19) expression -> primary_expression MINUS . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 45

state 29

    (20) expression -> primary_expression TIMES . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 46

state 30

    (21) expression -> primary_expression DIV . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 47

state 31

    (30) equality_expression -> equality_expression EQ . relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    relational_expression          shift and go to state 48
    primary_expression             shift and go to state 49
    assignation                    shift and go to state 19

state 32

    (31) equality_expression -> equality_expression NOT_EQ . relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    relational_expression          shift and go to state 50
    primary_expression             shift and go to state 49
    assignation                    shift and go to state 19

state 33

    (13) assignation -> ID ASSIGN . expression
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 51
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 34

    (25) relational_expression -> relational_expression LESS . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 52

state 35

    (26) relational_expression -> relational_expression GREATER . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 53

state 36

    (27) relational_expression -> relational_expression LESS_EQ . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 54

state 37

    (28) relational_expression -> relational_expression GREATER_EQ . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 55

state 38

    (9) iteration_statement -> WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 56


state 39

    (17) primary_expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)


state 40

    (10) iteration_statement -> FOR LPAREN expression_statement . expression_statement expression RPAREN statement
    (7) expression_statement -> . expression SEMICOLON
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression_statement           shift and go to state 57
    expression                     shift and go to state 9
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 41

    (8) compound_statement -> LBRACE programme RBRACE .

    WHILE           reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    FOR             reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    LBRACE          reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    IF              reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    ID              reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    INUMBER         reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    FNUMBER         reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    LPAREN          reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    $end            reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    RBRACE          reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    ELSE            reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)


state 42

    (11) selection_statement -> IF LPAREN expression . RPAREN statement
    (12) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN          shift and go to state 58


state 43

    (18) expression -> primary_expression PLUS primary_expression .

    SEMICOLON       reduce using rule 18 (expression -> primary_expression PLUS primary_expression .)
    RPAREN          reduce using rule 18 (expression -> primary_expression PLUS primary_expression .)
    LESS            reduce using rule 18 (expression -> primary_expression PLUS primary_expression .)
    GREATER         reduce using rule 18 (expression -> primary_expression PLUS primary_expression .)
    LESS_EQ         reduce using rule 18 (expression -> primary_expression PLUS primary_expression .)
    GREATER_EQ      reduce using rule 18 (expression -> primary_expression PLUS primary_expression .)
    EQ              reduce using rule 18 (expression -> primary_expression PLUS primary_expression .)
    NOT_EQ          reduce using rule 18 (expression -> primary_expression PLUS primary_expression .)


state 44

    (14) primary_expression -> ID .

    SEMICOLON       reduce using rule 14 (primary_expression -> ID .)
    RPAREN          reduce using rule 14 (primary_expression -> ID .)
    LESS            reduce using rule 14 (primary_expression -> ID .)
    GREATER         reduce using rule 14 (primary_expression -> ID .)
    LESS_EQ         reduce using rule 14 (primary_expression -> ID .)
    GREATER_EQ      reduce using rule 14 (primary_expression -> ID .)
    EQ              reduce using rule 14 (primary_expression -> ID .)
    NOT_EQ          reduce using rule 14 (primary_expression -> ID .)


state 45

    (19) expression -> primary_expression MINUS primary_expression .

    SEMICOLON       reduce using rule 19 (expression -> primary_expression MINUS primary_expression .)
    RPAREN          reduce using rule 19 (expression -> primary_expression MINUS primary_expression .)
    LESS            reduce using rule 19 (expression -> primary_expression MINUS primary_expression .)
    GREATER         reduce using rule 19 (expression -> primary_expression MINUS primary_expression .)
    LESS_EQ         reduce using rule 19 (expression -> primary_expression MINUS primary_expression .)
    GREATER_EQ      reduce using rule 19 (expression -> primary_expression MINUS primary_expression .)
    EQ              reduce using rule 19 (expression -> primary_expression MINUS primary_expression .)
    NOT_EQ          reduce using rule 19 (expression -> primary_expression MINUS primary_expression .)


state 46

    (20) expression -> primary_expression TIMES primary_expression .

    SEMICOLON       reduce using rule 20 (expression -> primary_expression TIMES primary_expression .)
    RPAREN          reduce using rule 20 (expression -> primary_expression TIMES primary_expression .)
    LESS            reduce using rule 20 (expression -> primary_expression TIMES primary_expression .)
    GREATER         reduce using rule 20 (expression -> primary_expression TIMES primary_expression .)
    LESS_EQ         reduce using rule 20 (expression -> primary_expression TIMES primary_expression .)
    GREATER_EQ      reduce using rule 20 (expression -> primary_expression TIMES primary_expression .)
    EQ              reduce using rule 20 (expression -> primary_expression TIMES primary_expression .)
    NOT_EQ          reduce using rule 20 (expression -> primary_expression TIMES primary_expression .)


state 47

    (21) expression -> primary_expression DIV primary_expression .

    SEMICOLON       reduce using rule 21 (expression -> primary_expression DIV primary_expression .)
    RPAREN          reduce using rule 21 (expression -> primary_expression DIV primary_expression .)
    LESS            reduce using rule 21 (expression -> primary_expression DIV primary_expression .)
    GREATER         reduce using rule 21 (expression -> primary_expression DIV primary_expression .)
    LESS_EQ         reduce using rule 21 (expression -> primary_expression DIV primary_expression .)
    GREATER_EQ      reduce using rule 21 (expression -> primary_expression DIV primary_expression .)
    EQ              reduce using rule 21 (expression -> primary_expression DIV primary_expression .)
    NOT_EQ          reduce using rule 21 (expression -> primary_expression DIV primary_expression .)


state 48

    (30) equality_expression -> equality_expression EQ relational_expression .
    (25) relational_expression -> relational_expression . LESS primary_expression
    (26) relational_expression -> relational_expression . GREATER primary_expression
    (27) relational_expression -> relational_expression . LESS_EQ primary_expression
    (28) relational_expression -> relational_expression . GREATER_EQ primary_expression

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQ resolved as shift
  ! shift/reduce conflict for GREATER_EQ resolved as shift
    EQ              reduce using rule 30 (equality_expression -> equality_expression EQ relational_expression .)
    NOT_EQ          reduce using rule 30 (equality_expression -> equality_expression EQ relational_expression .)
    SEMICOLON       reduce using rule 30 (equality_expression -> equality_expression EQ relational_expression .)
    RPAREN          reduce using rule 30 (equality_expression -> equality_expression EQ relational_expression .)
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER_EQ      shift and go to state 37

  ! LESS            [ reduce using rule 30 (equality_expression -> equality_expression EQ relational_expression .) ]
  ! GREATER         [ reduce using rule 30 (equality_expression -> equality_expression EQ relational_expression .) ]
  ! LESS_EQ         [ reduce using rule 30 (equality_expression -> equality_expression EQ relational_expression .) ]
  ! GREATER_EQ      [ reduce using rule 30 (equality_expression -> equality_expression EQ relational_expression .) ]


state 49

    (23) relational_expression -> primary_expression .

    LESS            reduce using rule 23 (relational_expression -> primary_expression .)
    GREATER         reduce using rule 23 (relational_expression -> primary_expression .)
    LESS_EQ         reduce using rule 23 (relational_expression -> primary_expression .)
    GREATER_EQ      reduce using rule 23 (relational_expression -> primary_expression .)
    EQ              reduce using rule 23 (relational_expression -> primary_expression .)
    NOT_EQ          reduce using rule 23 (relational_expression -> primary_expression .)
    SEMICOLON       reduce using rule 23 (relational_expression -> primary_expression .)
    RPAREN          reduce using rule 23 (relational_expression -> primary_expression .)


state 50

    (31) equality_expression -> equality_expression NOT_EQ relational_expression .
    (25) relational_expression -> relational_expression . LESS primary_expression
    (26) relational_expression -> relational_expression . GREATER primary_expression
    (27) relational_expression -> relational_expression . LESS_EQ primary_expression
    (28) relational_expression -> relational_expression . GREATER_EQ primary_expression

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQ resolved as shift
  ! shift/reduce conflict for GREATER_EQ resolved as shift
    EQ              reduce using rule 31 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    NOT_EQ          reduce using rule 31 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    SEMICOLON       reduce using rule 31 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    RPAREN          reduce using rule 31 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESS_EQ         shift and go to state 36
    GREATER_EQ      shift and go to state 37

  ! LESS            [ reduce using rule 31 (equality_expression -> equality_expression NOT_EQ relational_expression .) ]
  ! GREATER         [ reduce using rule 31 (equality_expression -> equality_expression NOT_EQ relational_expression .) ]
  ! LESS_EQ         [ reduce using rule 31 (equality_expression -> equality_expression NOT_EQ relational_expression .) ]
  ! GREATER_EQ      [ reduce using rule 31 (equality_expression -> equality_expression NOT_EQ relational_expression .) ]


state 51

    (13) assignation -> ID ASSIGN expression .

    LESS            reduce using rule 13 (assignation -> ID ASSIGN expression .)
    GREATER         reduce using rule 13 (assignation -> ID ASSIGN expression .)
    LESS_EQ         reduce using rule 13 (assignation -> ID ASSIGN expression .)
    GREATER_EQ      reduce using rule 13 (assignation -> ID ASSIGN expression .)
    EQ              reduce using rule 13 (assignation -> ID ASSIGN expression .)
    NOT_EQ          reduce using rule 13 (assignation -> ID ASSIGN expression .)
    SEMICOLON       reduce using rule 13 (assignation -> ID ASSIGN expression .)
    RPAREN          reduce using rule 13 (assignation -> ID ASSIGN expression .)


state 52

    (25) relational_expression -> relational_expression LESS primary_expression .

    LESS            reduce using rule 25 (relational_expression -> relational_expression LESS primary_expression .)
    GREATER         reduce using rule 25 (relational_expression -> relational_expression LESS primary_expression .)
    LESS_EQ         reduce using rule 25 (relational_expression -> relational_expression LESS primary_expression .)
    GREATER_EQ      reduce using rule 25 (relational_expression -> relational_expression LESS primary_expression .)
    EQ              reduce using rule 25 (relational_expression -> relational_expression LESS primary_expression .)
    NOT_EQ          reduce using rule 25 (relational_expression -> relational_expression LESS primary_expression .)
    SEMICOLON       reduce using rule 25 (relational_expression -> relational_expression LESS primary_expression .)
    RPAREN          reduce using rule 25 (relational_expression -> relational_expression LESS primary_expression .)


state 53

    (26) relational_expression -> relational_expression GREATER primary_expression .

    LESS            reduce using rule 26 (relational_expression -> relational_expression GREATER primary_expression .)
    GREATER         reduce using rule 26 (relational_expression -> relational_expression GREATER primary_expression .)
    LESS_EQ         reduce using rule 26 (relational_expression -> relational_expression GREATER primary_expression .)
    GREATER_EQ      reduce using rule 26 (relational_expression -> relational_expression GREATER primary_expression .)
    EQ              reduce using rule 26 (relational_expression -> relational_expression GREATER primary_expression .)
    NOT_EQ          reduce using rule 26 (relational_expression -> relational_expression GREATER primary_expression .)
    SEMICOLON       reduce using rule 26 (relational_expression -> relational_expression GREATER primary_expression .)
    RPAREN          reduce using rule 26 (relational_expression -> relational_expression GREATER primary_expression .)


state 54

    (27) relational_expression -> relational_expression LESS_EQ primary_expression .

    LESS            reduce using rule 27 (relational_expression -> relational_expression LESS_EQ primary_expression .)
    GREATER         reduce using rule 27 (relational_expression -> relational_expression LESS_EQ primary_expression .)
    LESS_EQ         reduce using rule 27 (relational_expression -> relational_expression LESS_EQ primary_expression .)
    GREATER_EQ      reduce using rule 27 (relational_expression -> relational_expression LESS_EQ primary_expression .)
    EQ              reduce using rule 27 (relational_expression -> relational_expression LESS_EQ primary_expression .)
    NOT_EQ          reduce using rule 27 (relational_expression -> relational_expression LESS_EQ primary_expression .)
    SEMICOLON       reduce using rule 27 (relational_expression -> relational_expression LESS_EQ primary_expression .)
    RPAREN          reduce using rule 27 (relational_expression -> relational_expression LESS_EQ primary_expression .)


state 55

    (28) relational_expression -> relational_expression GREATER_EQ primary_expression .

    LESS            reduce using rule 28 (relational_expression -> relational_expression GREATER_EQ primary_expression .)
    GREATER         reduce using rule 28 (relational_expression -> relational_expression GREATER_EQ primary_expression .)
    LESS_EQ         reduce using rule 28 (relational_expression -> relational_expression GREATER_EQ primary_expression .)
    GREATER_EQ      reduce using rule 28 (relational_expression -> relational_expression GREATER_EQ primary_expression .)
    EQ              reduce using rule 28 (relational_expression -> relational_expression GREATER_EQ primary_expression .)
    NOT_EQ          reduce using rule 28 (relational_expression -> relational_expression GREATER_EQ primary_expression .)
    SEMICOLON       reduce using rule 28 (relational_expression -> relational_expression GREATER_EQ primary_expression .)
    RPAREN          reduce using rule 28 (relational_expression -> relational_expression GREATER_EQ primary_expression .)


state 56

    (9) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 9
    statement                      shift and go to state 59
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 57

    (10) iteration_statement -> FOR LPAREN expression_statement expression_statement . expression RPAREN statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 60
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 58

    (11) selection_statement -> IF LPAREN expression RPAREN . statement
    (12) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 9
    statement                      shift and go to state 61
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 59

    (9) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    WHILE           reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INUMBER         reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FNUMBER         reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 60

    (10) iteration_statement -> FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN          shift and go to state 62


state 61

    (11) selection_statement -> IF LPAREN expression RPAREN statement .
    (12) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

    WHILE           reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INUMBER         reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FNUMBER         reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 63

  ! ELSE            [ reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 62

    (10) iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN . statement
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression_statement           shift and go to state 5
    expression                     shift and go to state 9
    statement                      shift and go to state 64
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    selection_statement            shift and go to state 6
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 63

    (12) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (18) expression -> . primary_expression PLUS primary_expression
    (19) expression -> . primary_expression MINUS primary_expression
    (20) expression -> . primary_expression TIMES primary_expression
    (21) expression -> . primary_expression DIV primary_expression
    (22) expression -> . equality_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN
    (29) equality_expression -> . relational_expression
    (30) equality_expression -> . equality_expression EQ relational_expression
    (31) equality_expression -> . equality_expression NOT_EQ relational_expression
    (23) relational_expression -> . primary_expression
    (24) relational_expression -> . assignation
    (25) relational_expression -> . relational_expression LESS primary_expression
    (26) relational_expression -> . relational_expression GREATER primary_expression
    (27) relational_expression -> . relational_expression LESS_EQ primary_expression
    (28) relational_expression -> . relational_expression GREATER_EQ primary_expression
    (13) assignation -> . ID ASSIGN expression

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 15
    INUMBER         shift and go to state 16
    FNUMBER         shift and go to state 17
    LPAREN          shift and go to state 8

    expression                     shift and go to state 9
    statement                      shift and go to state 65
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    primary_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 18
    assignation                    shift and go to state 19

state 64

    (10) iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    WHILE           reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    FOR             reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    LBRACE          reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    IF              reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    ID              reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    INUMBER         reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    FNUMBER         reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    LPAREN          reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    $end            reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    RBRACE          reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    ELSE            reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)


state 65

    (12) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    WHILE           reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INUMBER         reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FNUMBER         reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 14 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 14 resolved as shift
WARNING: shift/reduce conflict for LESS in state 18 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 18 resolved as shift
WARNING: shift/reduce conflict for LESS_EQ in state 18 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQ in state 18 resolved as shift
WARNING: shift/reduce conflict for LESS in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS_EQ in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQ in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS_EQ in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQ in state 50 resolved as shift
