Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    SHORT
    CHAR
    DOUBLE
    FLOAT
    INT
    LONG
    VOID
    RETURN
    COMMA
    CARET
    DOT
    EQ_PLUS
    EQ_MINUS
    EQ_TIMES
    EQ_DIV
    STRING
    CHARACTER

Grammar

Rule 0     S' -> programme
Rule 1     programme -> statement
Rule 2     programme -> statement programme
Rule 3     statement -> iteration_statement
Rule 4     statement -> compound_statement
Rule 5     statement -> expression_statement
Rule 6     statement -> selection_statement
Rule 7     expression_statement -> expression SEMICOLON
Rule 8     compound_statement -> LBRACE programme RBRACE
Rule 9     iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 10    iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement
Rule 11    selection_statement -> IF LPAREN expression RPAREN statement
Rule 12    selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 13    assignation -> ID ASSIGN expression
Rule 14    primary_expression -> ID
Rule 15    primary_expression -> INUMBER
Rule 16    primary_expression -> FNUMBER
Rule 17    primary_expression -> LPAREN expression RPAREN
Rule 18    op_expression -> op_expression PLUS primary_expression
Rule 19    op_expression -> op_expression MINUS primary_expression
Rule 20    op_expression -> op_expression TIMES primary_expression
Rule 21    op_expression -> op_expression DIV primary_expression
Rule 22    op_expression -> op_expression MODULO primary_expression
Rule 23    op_expression -> primary_expression
Rule 24    expression -> logical_expression
Rule 25    relational_expression -> op_expression
Rule 26    relational_expression -> assignation
Rule 27    relational_expression -> relational_expression LESS op_expression
Rule 28    relational_expression -> relational_expression GREATER op_expression
Rule 29    relational_expression -> relational_expression LESS_EQ op_expression
Rule 30    relational_expression -> relational_expression GREATER_EQ op_expression
Rule 31    equality_expression -> relational_expression
Rule 32    equality_expression -> equality_expression EQ relational_expression
Rule 33    equality_expression -> equality_expression NOT_EQ relational_expression
Rule 34    logical_expression -> equality_expression
Rule 35    logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression
Rule 36    logical_expression -> logical_expression DOUBLE_PIPE equality_expression

Terminals, with rules where they appear

ASSIGN               : 13
CARET                : 
CHAR                 : 
CHARACTER            : 
COMMA                : 
DIV                  : 21
DOT                  : 
DOUBLE               : 
DOUBLE_AMPERSAND     : 35
DOUBLE_PIPE          : 36
ELSE                 : 12
EQ                   : 32
EQ_DIV               : 
EQ_MINUS             : 
EQ_PLUS              : 
EQ_TIMES             : 
FLOAT                : 
FNUMBER              : 16
FOR                  : 10
GREATER              : 28
GREATER_EQ           : 30
ID                   : 13 14
IF                   : 11 12
INT                  : 
INUMBER              : 15
LBRACE               : 8
LESS                 : 27
LESS_EQ              : 29
LONG                 : 
LPAREN               : 9 10 11 12 17
MINUS                : 19
MODULO               : 22
NOT_EQ               : 33
PLUS                 : 18
RBRACE               : 8
RETURN               : 
RPAREN               : 9 10 11 12 17
SEMICOLON            : 7
SHORT                : 
STRING               : 
TIMES                : 20
VOID                 : 
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

assignation          : 26
compound_statement   : 4
equality_expression  : 32 33 34 35 36
expression           : 7 9 10 11 12 13 17
expression_statement : 5 10 10
iteration_statement  : 3
logical_expression   : 24 35 36
op_expression        : 18 19 20 21 22 25 27 28 29 30
primary_expression   : 18 19 20 21 22 23
programme            : 2 8 0
relational_expression : 27 28 29 30 31 32 33
selection_statement  : 6
statement            : 1 2 9 10 11 12 12

Parsing method: LALR

state 0

    (0) S' -> . programme
    (1) programme -> . statement
    (2) programme -> . statement programme
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    programme                      shift and go to state 1
    statement                      shift and go to state 2
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    expression                     shift and go to state 9
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 1

    (0) S' -> programme .



state 2

    (1) programme -> statement .
    (2) programme -> statement . programme
    (1) programme -> . statement
    (2) programme -> . statement programme
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (programme -> statement .)
    RBRACE          reduce using rule 1 (programme -> statement .)
    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    statement                      shift and go to state 2
    programme                      shift and go to state 22
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    expression                     shift and go to state 9
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 3

    (3) statement -> iteration_statement .

    WHILE           reduce using rule 3 (statement -> iteration_statement .)
    FOR             reduce using rule 3 (statement -> iteration_statement .)
    LBRACE          reduce using rule 3 (statement -> iteration_statement .)
    IF              reduce using rule 3 (statement -> iteration_statement .)
    ID              reduce using rule 3 (statement -> iteration_statement .)
    INUMBER         reduce using rule 3 (statement -> iteration_statement .)
    FNUMBER         reduce using rule 3 (statement -> iteration_statement .)
    LPAREN          reduce using rule 3 (statement -> iteration_statement .)
    $end            reduce using rule 3 (statement -> iteration_statement .)
    RBRACE          reduce using rule 3 (statement -> iteration_statement .)
    ELSE            reduce using rule 3 (statement -> iteration_statement .)


state 4

    (4) statement -> compound_statement .

    WHILE           reduce using rule 4 (statement -> compound_statement .)
    FOR             reduce using rule 4 (statement -> compound_statement .)
    LBRACE          reduce using rule 4 (statement -> compound_statement .)
    IF              reduce using rule 4 (statement -> compound_statement .)
    ID              reduce using rule 4 (statement -> compound_statement .)
    INUMBER         reduce using rule 4 (statement -> compound_statement .)
    FNUMBER         reduce using rule 4 (statement -> compound_statement .)
    LPAREN          reduce using rule 4 (statement -> compound_statement .)
    $end            reduce using rule 4 (statement -> compound_statement .)
    RBRACE          reduce using rule 4 (statement -> compound_statement .)
    ELSE            reduce using rule 4 (statement -> compound_statement .)


state 5

    (5) statement -> expression_statement .

    WHILE           reduce using rule 5 (statement -> expression_statement .)
    FOR             reduce using rule 5 (statement -> expression_statement .)
    LBRACE          reduce using rule 5 (statement -> expression_statement .)
    IF              reduce using rule 5 (statement -> expression_statement .)
    ID              reduce using rule 5 (statement -> expression_statement .)
    INUMBER         reduce using rule 5 (statement -> expression_statement .)
    FNUMBER         reduce using rule 5 (statement -> expression_statement .)
    LPAREN          reduce using rule 5 (statement -> expression_statement .)
    $end            reduce using rule 5 (statement -> expression_statement .)
    RBRACE          reduce using rule 5 (statement -> expression_statement .)
    ELSE            reduce using rule 5 (statement -> expression_statement .)


state 6

    (6) statement -> selection_statement .

    WHILE           reduce using rule 6 (statement -> selection_statement .)
    FOR             reduce using rule 6 (statement -> selection_statement .)
    LBRACE          reduce using rule 6 (statement -> selection_statement .)
    IF              reduce using rule 6 (statement -> selection_statement .)
    ID              reduce using rule 6 (statement -> selection_statement .)
    INUMBER         reduce using rule 6 (statement -> selection_statement .)
    FNUMBER         reduce using rule 6 (statement -> selection_statement .)
    LPAREN          reduce using rule 6 (statement -> selection_statement .)
    $end            reduce using rule 6 (statement -> selection_statement .)
    RBRACE          reduce using rule 6 (statement -> selection_statement .)
    ELSE            reduce using rule 6 (statement -> selection_statement .)


state 7

    (9) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 23


state 8

    (17) primary_expression -> LPAREN . expression RPAREN
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression                     shift and go to state 24
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 9

    (7) expression_statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 25


state 10

    (10) iteration_statement -> FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN          shift and go to state 26


state 11

    (8) compound_statement -> LBRACE . programme RBRACE
    (1) programme -> . statement
    (2) programme -> . statement programme
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    programme                      shift and go to state 27
    statement                      shift and go to state 2
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    expression                     shift and go to state 9
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 12

    (11) selection_statement -> IF . LPAREN expression RPAREN statement
    (12) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 28


state 13

    (24) expression -> logical_expression .
    (35) logical_expression -> logical_expression . DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> logical_expression . DOUBLE_PIPE equality_expression

  ! shift/reduce conflict for DOUBLE_AMPERSAND resolved as shift
  ! shift/reduce conflict for DOUBLE_PIPE resolved as shift
    SEMICOLON       reduce using rule 24 (expression -> logical_expression .)
    RPAREN          reduce using rule 24 (expression -> logical_expression .)
    EQ              reduce using rule 24 (expression -> logical_expression .)
    NOT_EQ          reduce using rule 24 (expression -> logical_expression .)
    LESS            reduce using rule 24 (expression -> logical_expression .)
    GREATER         reduce using rule 24 (expression -> logical_expression .)
    LESS_EQ         reduce using rule 24 (expression -> logical_expression .)
    GREATER_EQ      reduce using rule 24 (expression -> logical_expression .)
    DOUBLE_AMPERSAND shift and go to state 29
    DOUBLE_PIPE     shift and go to state 30

  ! DOUBLE_AMPERSAND [ reduce using rule 24 (expression -> logical_expression .) ]
  ! DOUBLE_PIPE     [ reduce using rule 24 (expression -> logical_expression .) ]


state 14

    (34) logical_expression -> equality_expression .
    (32) equality_expression -> equality_expression . EQ relational_expression
    (33) equality_expression -> equality_expression . NOT_EQ relational_expression

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
    DOUBLE_AMPERSAND reduce using rule 34 (logical_expression -> equality_expression .)
    DOUBLE_PIPE     reduce using rule 34 (logical_expression -> equality_expression .)
    SEMICOLON       reduce using rule 34 (logical_expression -> equality_expression .)
    RPAREN          reduce using rule 34 (logical_expression -> equality_expression .)
    LESS            reduce using rule 34 (logical_expression -> equality_expression .)
    GREATER         reduce using rule 34 (logical_expression -> equality_expression .)
    LESS_EQ         reduce using rule 34 (logical_expression -> equality_expression .)
    GREATER_EQ      reduce using rule 34 (logical_expression -> equality_expression .)
    EQ              shift and go to state 31
    NOT_EQ          shift and go to state 32

  ! EQ              [ reduce using rule 34 (logical_expression -> equality_expression .) ]
  ! NOT_EQ          [ reduce using rule 34 (logical_expression -> equality_expression .) ]


state 15

    (31) equality_expression -> relational_expression .
    (27) relational_expression -> relational_expression . LESS op_expression
    (28) relational_expression -> relational_expression . GREATER op_expression
    (29) relational_expression -> relational_expression . LESS_EQ op_expression
    (30) relational_expression -> relational_expression . GREATER_EQ op_expression

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQ resolved as shift
  ! shift/reduce conflict for GREATER_EQ resolved as shift
    EQ              reduce using rule 31 (equality_expression -> relational_expression .)
    NOT_EQ          reduce using rule 31 (equality_expression -> relational_expression .)
    DOUBLE_AMPERSAND reduce using rule 31 (equality_expression -> relational_expression .)
    DOUBLE_PIPE     reduce using rule 31 (equality_expression -> relational_expression .)
    SEMICOLON       reduce using rule 31 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 31 (equality_expression -> relational_expression .)
    LESS            shift and go to state 33
    GREATER         shift and go to state 34
    LESS_EQ         shift and go to state 35
    GREATER_EQ      shift and go to state 36

  ! LESS            [ reduce using rule 31 (equality_expression -> relational_expression .) ]
  ! GREATER         [ reduce using rule 31 (equality_expression -> relational_expression .) ]
  ! LESS_EQ         [ reduce using rule 31 (equality_expression -> relational_expression .) ]
  ! GREATER_EQ      [ reduce using rule 31 (equality_expression -> relational_expression .) ]


state 16

    (25) relational_expression -> op_expression .
    (18) op_expression -> op_expression . PLUS primary_expression
    (19) op_expression -> op_expression . MINUS primary_expression
    (20) op_expression -> op_expression . TIMES primary_expression
    (21) op_expression -> op_expression . DIV primary_expression
    (22) op_expression -> op_expression . MODULO primary_expression

    LESS            reduce using rule 25 (relational_expression -> op_expression .)
    GREATER         reduce using rule 25 (relational_expression -> op_expression .)
    LESS_EQ         reduce using rule 25 (relational_expression -> op_expression .)
    GREATER_EQ      reduce using rule 25 (relational_expression -> op_expression .)
    EQ              reduce using rule 25 (relational_expression -> op_expression .)
    NOT_EQ          reduce using rule 25 (relational_expression -> op_expression .)
    DOUBLE_AMPERSAND reduce using rule 25 (relational_expression -> op_expression .)
    DOUBLE_PIPE     reduce using rule 25 (relational_expression -> op_expression .)
    SEMICOLON       reduce using rule 25 (relational_expression -> op_expression .)
    RPAREN          reduce using rule 25 (relational_expression -> op_expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41


state 17

    (26) relational_expression -> assignation .

    LESS            reduce using rule 26 (relational_expression -> assignation .)
    GREATER         reduce using rule 26 (relational_expression -> assignation .)
    LESS_EQ         reduce using rule 26 (relational_expression -> assignation .)
    GREATER_EQ      reduce using rule 26 (relational_expression -> assignation .)
    EQ              reduce using rule 26 (relational_expression -> assignation .)
    NOT_EQ          reduce using rule 26 (relational_expression -> assignation .)
    DOUBLE_AMPERSAND reduce using rule 26 (relational_expression -> assignation .)
    DOUBLE_PIPE     reduce using rule 26 (relational_expression -> assignation .)
    SEMICOLON       reduce using rule 26 (relational_expression -> assignation .)
    RPAREN          reduce using rule 26 (relational_expression -> assignation .)


state 18

    (23) op_expression -> primary_expression .

    PLUS            reduce using rule 23 (op_expression -> primary_expression .)
    MINUS           reduce using rule 23 (op_expression -> primary_expression .)
    TIMES           reduce using rule 23 (op_expression -> primary_expression .)
    DIV             reduce using rule 23 (op_expression -> primary_expression .)
    MODULO          reduce using rule 23 (op_expression -> primary_expression .)
    LESS            reduce using rule 23 (op_expression -> primary_expression .)
    GREATER         reduce using rule 23 (op_expression -> primary_expression .)
    LESS_EQ         reduce using rule 23 (op_expression -> primary_expression .)
    GREATER_EQ      reduce using rule 23 (op_expression -> primary_expression .)
    EQ              reduce using rule 23 (op_expression -> primary_expression .)
    NOT_EQ          reduce using rule 23 (op_expression -> primary_expression .)
    DOUBLE_AMPERSAND reduce using rule 23 (op_expression -> primary_expression .)
    DOUBLE_PIPE     reduce using rule 23 (op_expression -> primary_expression .)
    SEMICOLON       reduce using rule 23 (op_expression -> primary_expression .)
    RPAREN          reduce using rule 23 (op_expression -> primary_expression .)


state 19

    (13) assignation -> ID . ASSIGN expression
    (14) primary_expression -> ID .

    ASSIGN          shift and go to state 42
    PLUS            reduce using rule 14 (primary_expression -> ID .)
    MINUS           reduce using rule 14 (primary_expression -> ID .)
    TIMES           reduce using rule 14 (primary_expression -> ID .)
    DIV             reduce using rule 14 (primary_expression -> ID .)
    MODULO          reduce using rule 14 (primary_expression -> ID .)
    LESS            reduce using rule 14 (primary_expression -> ID .)
    GREATER         reduce using rule 14 (primary_expression -> ID .)
    LESS_EQ         reduce using rule 14 (primary_expression -> ID .)
    GREATER_EQ      reduce using rule 14 (primary_expression -> ID .)
    EQ              reduce using rule 14 (primary_expression -> ID .)
    NOT_EQ          reduce using rule 14 (primary_expression -> ID .)
    DOUBLE_AMPERSAND reduce using rule 14 (primary_expression -> ID .)
    DOUBLE_PIPE     reduce using rule 14 (primary_expression -> ID .)
    SEMICOLON       reduce using rule 14 (primary_expression -> ID .)
    RPAREN          reduce using rule 14 (primary_expression -> ID .)


state 20

    (15) primary_expression -> INUMBER .

    PLUS            reduce using rule 15 (primary_expression -> INUMBER .)
    MINUS           reduce using rule 15 (primary_expression -> INUMBER .)
    TIMES           reduce using rule 15 (primary_expression -> INUMBER .)
    DIV             reduce using rule 15 (primary_expression -> INUMBER .)
    MODULO          reduce using rule 15 (primary_expression -> INUMBER .)
    LESS            reduce using rule 15 (primary_expression -> INUMBER .)
    GREATER         reduce using rule 15 (primary_expression -> INUMBER .)
    LESS_EQ         reduce using rule 15 (primary_expression -> INUMBER .)
    GREATER_EQ      reduce using rule 15 (primary_expression -> INUMBER .)
    EQ              reduce using rule 15 (primary_expression -> INUMBER .)
    NOT_EQ          reduce using rule 15 (primary_expression -> INUMBER .)
    DOUBLE_AMPERSAND reduce using rule 15 (primary_expression -> INUMBER .)
    DOUBLE_PIPE     reduce using rule 15 (primary_expression -> INUMBER .)
    SEMICOLON       reduce using rule 15 (primary_expression -> INUMBER .)
    RPAREN          reduce using rule 15 (primary_expression -> INUMBER .)


state 21

    (16) primary_expression -> FNUMBER .

    PLUS            reduce using rule 16 (primary_expression -> FNUMBER .)
    MINUS           reduce using rule 16 (primary_expression -> FNUMBER .)
    TIMES           reduce using rule 16 (primary_expression -> FNUMBER .)
    DIV             reduce using rule 16 (primary_expression -> FNUMBER .)
    MODULO          reduce using rule 16 (primary_expression -> FNUMBER .)
    LESS            reduce using rule 16 (primary_expression -> FNUMBER .)
    GREATER         reduce using rule 16 (primary_expression -> FNUMBER .)
    LESS_EQ         reduce using rule 16 (primary_expression -> FNUMBER .)
    GREATER_EQ      reduce using rule 16 (primary_expression -> FNUMBER .)
    EQ              reduce using rule 16 (primary_expression -> FNUMBER .)
    NOT_EQ          reduce using rule 16 (primary_expression -> FNUMBER .)
    DOUBLE_AMPERSAND reduce using rule 16 (primary_expression -> FNUMBER .)
    DOUBLE_PIPE     reduce using rule 16 (primary_expression -> FNUMBER .)
    SEMICOLON       reduce using rule 16 (primary_expression -> FNUMBER .)
    RPAREN          reduce using rule 16 (primary_expression -> FNUMBER .)


state 22

    (2) programme -> statement programme .

    $end            reduce using rule 2 (programme -> statement programme .)
    RBRACE          reduce using rule 2 (programme -> statement programme .)


state 23

    (9) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression                     shift and go to state 43
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 24

    (17) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 44


state 25

    (7) expression_statement -> expression SEMICOLON .

    WHILE           reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    FOR             reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    ID              reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    INUMBER         reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    FNUMBER         reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 7 (expression_statement -> expression SEMICOLON .)
    ELSE            reduce using rule 7 (expression_statement -> expression SEMICOLON .)


state 26

    (10) iteration_statement -> FOR LPAREN . expression_statement expression_statement expression RPAREN statement
    (7) expression_statement -> . expression SEMICOLON
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression_statement           shift and go to state 45
    expression                     shift and go to state 9
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 27

    (8) compound_statement -> LBRACE programme . RBRACE

    RBRACE          shift and go to state 46


state 28

    (11) selection_statement -> IF LPAREN . expression RPAREN statement
    (12) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression                     shift and go to state 47
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 29

    (35) logical_expression -> logical_expression DOUBLE_AMPERSAND . equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    equality_expression            shift and go to state 48
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 30

    (36) logical_expression -> logical_expression DOUBLE_PIPE . equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    equality_expression            shift and go to state 49
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 31

    (32) equality_expression -> equality_expression EQ . relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    relational_expression          shift and go to state 50
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 32

    (33) equality_expression -> equality_expression NOT_EQ . relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    relational_expression          shift and go to state 51
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 33

    (27) relational_expression -> relational_expression LESS . op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    op_expression                  shift and go to state 52
    primary_expression             shift and go to state 18

state 34

    (28) relational_expression -> relational_expression GREATER . op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    op_expression                  shift and go to state 54
    primary_expression             shift and go to state 18

state 35

    (29) relational_expression -> relational_expression LESS_EQ . op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    op_expression                  shift and go to state 55
    primary_expression             shift and go to state 18

state 36

    (30) relational_expression -> relational_expression GREATER_EQ . op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    op_expression                  shift and go to state 56
    primary_expression             shift and go to state 18

state 37

    (18) op_expression -> op_expression PLUS . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 57

state 38

    (19) op_expression -> op_expression MINUS . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 58

state 39

    (20) op_expression -> op_expression TIMES . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 59

state 40

    (21) op_expression -> op_expression DIV . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 60

state 41

    (22) op_expression -> op_expression MODULO . primary_expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    primary_expression             shift and go to state 61

state 42

    (13) assignation -> ID ASSIGN . expression
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression                     shift and go to state 62
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 43

    (9) iteration_statement -> WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 63


state 44

    (17) primary_expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    DOUBLE_PIPE     reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (primary_expression -> LPAREN expression RPAREN .)


state 45

    (10) iteration_statement -> FOR LPAREN expression_statement . expression_statement expression RPAREN statement
    (7) expression_statement -> . expression SEMICOLON
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression_statement           shift and go to state 64
    expression                     shift and go to state 9
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 46

    (8) compound_statement -> LBRACE programme RBRACE .

    WHILE           reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    FOR             reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    LBRACE          reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    IF              reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    ID              reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    INUMBER         reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    FNUMBER         reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    LPAREN          reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    $end            reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    RBRACE          reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)
    ELSE            reduce using rule 8 (compound_statement -> LBRACE programme RBRACE .)


state 47

    (11) selection_statement -> IF LPAREN expression . RPAREN statement
    (12) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN          shift and go to state 65


state 48

    (35) logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .
    (32) equality_expression -> equality_expression . EQ relational_expression
    (33) equality_expression -> equality_expression . NOT_EQ relational_expression

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
    DOUBLE_AMPERSAND reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .)
    DOUBLE_PIPE     reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .)
    SEMICOLON       reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .)
    RPAREN          reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .)
    LESS            reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .)
    GREATER         reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .)
    LESS_EQ         reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .)
    GREATER_EQ      reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .)
    EQ              shift and go to state 31
    NOT_EQ          shift and go to state 32

  ! EQ              [ reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .) ]
  ! NOT_EQ          [ reduce using rule 35 (logical_expression -> logical_expression DOUBLE_AMPERSAND equality_expression .) ]


state 49

    (36) logical_expression -> logical_expression DOUBLE_PIPE equality_expression .
    (32) equality_expression -> equality_expression . EQ relational_expression
    (33) equality_expression -> equality_expression . NOT_EQ relational_expression

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
    DOUBLE_AMPERSAND reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .)
    DOUBLE_PIPE     reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .)
    SEMICOLON       reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .)
    RPAREN          reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .)
    LESS            reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .)
    GREATER         reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .)
    LESS_EQ         reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .)
    GREATER_EQ      reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .)
    EQ              shift and go to state 31
    NOT_EQ          shift and go to state 32

  ! EQ              [ reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .) ]
  ! NOT_EQ          [ reduce using rule 36 (logical_expression -> logical_expression DOUBLE_PIPE equality_expression .) ]


state 50

    (32) equality_expression -> equality_expression EQ relational_expression .
    (27) relational_expression -> relational_expression . LESS op_expression
    (28) relational_expression -> relational_expression . GREATER op_expression
    (29) relational_expression -> relational_expression . LESS_EQ op_expression
    (30) relational_expression -> relational_expression . GREATER_EQ op_expression

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQ resolved as shift
  ! shift/reduce conflict for GREATER_EQ resolved as shift
    EQ              reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .)
    NOT_EQ          reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .)
    DOUBLE_AMPERSAND reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .)
    DOUBLE_PIPE     reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .)
    SEMICOLON       reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .)
    RPAREN          reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .)
    LESS            shift and go to state 33
    GREATER         shift and go to state 34
    LESS_EQ         shift and go to state 35
    GREATER_EQ      shift and go to state 36

  ! LESS            [ reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .) ]
  ! GREATER         [ reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .) ]
  ! LESS_EQ         [ reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .) ]
  ! GREATER_EQ      [ reduce using rule 32 (equality_expression -> equality_expression EQ relational_expression .) ]


state 51

    (33) equality_expression -> equality_expression NOT_EQ relational_expression .
    (27) relational_expression -> relational_expression . LESS op_expression
    (28) relational_expression -> relational_expression . GREATER op_expression
    (29) relational_expression -> relational_expression . LESS_EQ op_expression
    (30) relational_expression -> relational_expression . GREATER_EQ op_expression

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQ resolved as shift
  ! shift/reduce conflict for GREATER_EQ resolved as shift
    EQ              reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    NOT_EQ          reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    DOUBLE_AMPERSAND reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    DOUBLE_PIPE     reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    SEMICOLON       reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    RPAREN          reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .)
    LESS            shift and go to state 33
    GREATER         shift and go to state 34
    LESS_EQ         shift and go to state 35
    GREATER_EQ      shift and go to state 36

  ! LESS            [ reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .) ]
  ! GREATER         [ reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .) ]
  ! LESS_EQ         [ reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .) ]
  ! GREATER_EQ      [ reduce using rule 33 (equality_expression -> equality_expression NOT_EQ relational_expression .) ]


state 52

    (27) relational_expression -> relational_expression LESS op_expression .
    (18) op_expression -> op_expression . PLUS primary_expression
    (19) op_expression -> op_expression . MINUS primary_expression
    (20) op_expression -> op_expression . TIMES primary_expression
    (21) op_expression -> op_expression . DIV primary_expression
    (22) op_expression -> op_expression . MODULO primary_expression

    LESS            reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    GREATER         reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    LESS_EQ         reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    GREATER_EQ      reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    EQ              reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    NOT_EQ          reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    DOUBLE_AMPERSAND reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    DOUBLE_PIPE     reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    SEMICOLON       reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    RPAREN          reduce using rule 27 (relational_expression -> relational_expression LESS op_expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41


state 53

    (14) primary_expression -> ID .

    PLUS            reduce using rule 14 (primary_expression -> ID .)
    MINUS           reduce using rule 14 (primary_expression -> ID .)
    TIMES           reduce using rule 14 (primary_expression -> ID .)
    DIV             reduce using rule 14 (primary_expression -> ID .)
    MODULO          reduce using rule 14 (primary_expression -> ID .)
    LESS            reduce using rule 14 (primary_expression -> ID .)
    GREATER         reduce using rule 14 (primary_expression -> ID .)
    LESS_EQ         reduce using rule 14 (primary_expression -> ID .)
    GREATER_EQ      reduce using rule 14 (primary_expression -> ID .)
    EQ              reduce using rule 14 (primary_expression -> ID .)
    NOT_EQ          reduce using rule 14 (primary_expression -> ID .)
    DOUBLE_AMPERSAND reduce using rule 14 (primary_expression -> ID .)
    DOUBLE_PIPE     reduce using rule 14 (primary_expression -> ID .)
    SEMICOLON       reduce using rule 14 (primary_expression -> ID .)
    RPAREN          reduce using rule 14 (primary_expression -> ID .)


state 54

    (28) relational_expression -> relational_expression GREATER op_expression .
    (18) op_expression -> op_expression . PLUS primary_expression
    (19) op_expression -> op_expression . MINUS primary_expression
    (20) op_expression -> op_expression . TIMES primary_expression
    (21) op_expression -> op_expression . DIV primary_expression
    (22) op_expression -> op_expression . MODULO primary_expression

    LESS            reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    GREATER         reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    LESS_EQ         reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    GREATER_EQ      reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    EQ              reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    NOT_EQ          reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    DOUBLE_AMPERSAND reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    DOUBLE_PIPE     reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    SEMICOLON       reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    RPAREN          reduce using rule 28 (relational_expression -> relational_expression GREATER op_expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41


state 55

    (29) relational_expression -> relational_expression LESS_EQ op_expression .
    (18) op_expression -> op_expression . PLUS primary_expression
    (19) op_expression -> op_expression . MINUS primary_expression
    (20) op_expression -> op_expression . TIMES primary_expression
    (21) op_expression -> op_expression . DIV primary_expression
    (22) op_expression -> op_expression . MODULO primary_expression

    LESS            reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    GREATER         reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    LESS_EQ         reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    GREATER_EQ      reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    EQ              reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    NOT_EQ          reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    DOUBLE_AMPERSAND reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    DOUBLE_PIPE     reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    SEMICOLON       reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    RPAREN          reduce using rule 29 (relational_expression -> relational_expression LESS_EQ op_expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41


state 56

    (30) relational_expression -> relational_expression GREATER_EQ op_expression .
    (18) op_expression -> op_expression . PLUS primary_expression
    (19) op_expression -> op_expression . MINUS primary_expression
    (20) op_expression -> op_expression . TIMES primary_expression
    (21) op_expression -> op_expression . DIV primary_expression
    (22) op_expression -> op_expression . MODULO primary_expression

    LESS            reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    GREATER         reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    LESS_EQ         reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    GREATER_EQ      reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    EQ              reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    NOT_EQ          reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    DOUBLE_AMPERSAND reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    DOUBLE_PIPE     reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    SEMICOLON       reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    RPAREN          reduce using rule 30 (relational_expression -> relational_expression GREATER_EQ op_expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41


state 57

    (18) op_expression -> op_expression PLUS primary_expression .

    PLUS            reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    MINUS           reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    TIMES           reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    DIV             reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    MODULO          reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    LESS            reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    GREATER         reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    LESS_EQ         reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    GREATER_EQ      reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    EQ              reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    NOT_EQ          reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    DOUBLE_AMPERSAND reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    DOUBLE_PIPE     reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    SEMICOLON       reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)
    RPAREN          reduce using rule 18 (op_expression -> op_expression PLUS primary_expression .)


state 58

    (19) op_expression -> op_expression MINUS primary_expression .

    PLUS            reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    MINUS           reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    TIMES           reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    DIV             reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    MODULO          reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    LESS            reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    GREATER         reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    LESS_EQ         reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    GREATER_EQ      reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    EQ              reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    NOT_EQ          reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    DOUBLE_AMPERSAND reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    DOUBLE_PIPE     reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    SEMICOLON       reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)
    RPAREN          reduce using rule 19 (op_expression -> op_expression MINUS primary_expression .)


state 59

    (20) op_expression -> op_expression TIMES primary_expression .

    PLUS            reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    MINUS           reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    TIMES           reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    DIV             reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    MODULO          reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    LESS            reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    GREATER         reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    LESS_EQ         reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    GREATER_EQ      reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    EQ              reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    NOT_EQ          reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    DOUBLE_AMPERSAND reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    DOUBLE_PIPE     reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    SEMICOLON       reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)
    RPAREN          reduce using rule 20 (op_expression -> op_expression TIMES primary_expression .)


state 60

    (21) op_expression -> op_expression DIV primary_expression .

    PLUS            reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    MINUS           reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    TIMES           reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    DIV             reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    MODULO          reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    LESS            reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    GREATER         reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    LESS_EQ         reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    GREATER_EQ      reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    EQ              reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    NOT_EQ          reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    DOUBLE_AMPERSAND reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    DOUBLE_PIPE     reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    SEMICOLON       reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)
    RPAREN          reduce using rule 21 (op_expression -> op_expression DIV primary_expression .)


state 61

    (22) op_expression -> op_expression MODULO primary_expression .

    PLUS            reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    MINUS           reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    TIMES           reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    DIV             reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    MODULO          reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    LESS            reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    GREATER         reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    LESS_EQ         reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    GREATER_EQ      reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    EQ              reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    NOT_EQ          reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    DOUBLE_AMPERSAND reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    DOUBLE_PIPE     reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    SEMICOLON       reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)
    RPAREN          reduce using rule 22 (op_expression -> op_expression MODULO primary_expression .)


state 62

    (13) assignation -> ID ASSIGN expression .

    LESS            reduce using rule 13 (assignation -> ID ASSIGN expression .)
    GREATER         reduce using rule 13 (assignation -> ID ASSIGN expression .)
    LESS_EQ         reduce using rule 13 (assignation -> ID ASSIGN expression .)
    GREATER_EQ      reduce using rule 13 (assignation -> ID ASSIGN expression .)
    EQ              reduce using rule 13 (assignation -> ID ASSIGN expression .)
    NOT_EQ          reduce using rule 13 (assignation -> ID ASSIGN expression .)
    DOUBLE_AMPERSAND reduce using rule 13 (assignation -> ID ASSIGN expression .)
    DOUBLE_PIPE     reduce using rule 13 (assignation -> ID ASSIGN expression .)
    SEMICOLON       reduce using rule 13 (assignation -> ID ASSIGN expression .)
    RPAREN          reduce using rule 13 (assignation -> ID ASSIGN expression .)


state 63

    (9) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression                     shift and go to state 9
    statement                      shift and go to state 66
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 64

    (10) iteration_statement -> FOR LPAREN expression_statement expression_statement . expression RPAREN statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression                     shift and go to state 67
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 65

    (11) selection_statement -> IF LPAREN expression RPAREN . statement
    (12) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression                     shift and go to state 9
    statement                      shift and go to state 68
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 66

    (9) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    WHILE           reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INUMBER         reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FNUMBER         reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 9 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 67

    (10) iteration_statement -> FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN          shift and go to state 69


state 68

    (11) selection_statement -> IF LPAREN expression RPAREN statement .
    (12) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

    WHILE           reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INUMBER         reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FNUMBER         reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 70

  ! ELSE            [ reduce using rule 11 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 69

    (10) iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN . statement
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression_statement           shift and go to state 5
    expression                     shift and go to state 9
    statement                      shift and go to state 71
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    selection_statement            shift and go to state 6
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 70

    (12) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (3) statement -> . iteration_statement
    (4) statement -> . compound_statement
    (5) statement -> . expression_statement
    (6) statement -> . selection_statement
    (9) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (10) iteration_statement -> . FOR LPAREN expression_statement expression_statement expression RPAREN statement
    (8) compound_statement -> . LBRACE programme RBRACE
    (7) expression_statement -> . expression SEMICOLON
    (11) selection_statement -> . IF LPAREN expression RPAREN statement
    (12) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (24) expression -> . logical_expression
    (34) logical_expression -> . equality_expression
    (35) logical_expression -> . logical_expression DOUBLE_AMPERSAND equality_expression
    (36) logical_expression -> . logical_expression DOUBLE_PIPE equality_expression
    (31) equality_expression -> . relational_expression
    (32) equality_expression -> . equality_expression EQ relational_expression
    (33) equality_expression -> . equality_expression NOT_EQ relational_expression
    (25) relational_expression -> . op_expression
    (26) relational_expression -> . assignation
    (27) relational_expression -> . relational_expression LESS op_expression
    (28) relational_expression -> . relational_expression GREATER op_expression
    (29) relational_expression -> . relational_expression LESS_EQ op_expression
    (30) relational_expression -> . relational_expression GREATER_EQ op_expression
    (18) op_expression -> . op_expression PLUS primary_expression
    (19) op_expression -> . op_expression MINUS primary_expression
    (20) op_expression -> . op_expression TIMES primary_expression
    (21) op_expression -> . op_expression DIV primary_expression
    (22) op_expression -> . op_expression MODULO primary_expression
    (23) op_expression -> . primary_expression
    (13) assignation -> . ID ASSIGN expression
    (14) primary_expression -> . ID
    (15) primary_expression -> . INUMBER
    (16) primary_expression -> . FNUMBER
    (17) primary_expression -> . LPAREN expression RPAREN

    WHILE           shift and go to state 7
    FOR             shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 19
    INUMBER         shift and go to state 20
    FNUMBER         shift and go to state 21
    LPAREN          shift and go to state 8

    expression                     shift and go to state 9
    statement                      shift and go to state 72
    iteration_statement            shift and go to state 3
    compound_statement             shift and go to state 4
    expression_statement           shift and go to state 5
    selection_statement            shift and go to state 6
    logical_expression             shift and go to state 13
    equality_expression            shift and go to state 14
    relational_expression          shift and go to state 15
    op_expression                  shift and go to state 16
    assignation                    shift and go to state 17
    primary_expression             shift and go to state 18

state 71

    (10) iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    WHILE           reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    FOR             reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    LBRACE          reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    IF              reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    ID              reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    INUMBER         reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    FNUMBER         reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    LPAREN          reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    $end            reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    RBRACE          reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)
    ELSE            reduce using rule 10 (iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement .)


state 72

    (12) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    WHILE           reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INUMBER         reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FNUMBER         reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 12 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOUBLE_AMPERSAND in state 13 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_PIPE in state 13 resolved as shift
WARNING: shift/reduce conflict for EQ in state 14 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 14 resolved as shift
WARNING: shift/reduce conflict for LESS in state 15 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 15 resolved as shift
WARNING: shift/reduce conflict for LESS_EQ in state 15 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQ in state 15 resolved as shift
WARNING: shift/reduce conflict for EQ in state 48 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 48 resolved as shift
WARNING: shift/reduce conflict for EQ in state 49 resolved as shift
WARNING: shift/reduce conflict for NOT_EQ in state 49 resolved as shift
WARNING: shift/reduce conflict for LESS in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS_EQ in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQ in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS in state 51 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 51 resolved as shift
WARNING: shift/reduce conflict for LESS_EQ in state 51 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQ in state 51 resolved as shift
